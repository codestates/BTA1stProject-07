import Long from 'long';
import _m0 from 'protobufjs/minimal';
import { Params } from '../../../kava/incentive/v1beta1/params';
import { MultiRewardIndex, USDXMintingClaim, HardLiquidityProviderClaim, DelegatorClaim, SwapClaim, SavingsClaim, EarnClaim } from '../../../kava/incentive/v1beta1/claims';
export declare const protobufPackage = "kava.incentive.v1beta1";
/** AccumulationTime stores the previous reward distribution time and its corresponding collateral type */
export interface AccumulationTime {
    collateralType: string;
    previousAccumulationTime?: Date;
}
/** GenesisRewardState groups together the global state for a particular reward so it can be exported in genesis. */
export interface GenesisRewardState {
    accumulationTimes: AccumulationTime[];
    multiRewardIndexes: MultiRewardIndex[];
}
/** GenesisState is the state that must be provided at genesis. */
export interface GenesisState {
    params?: Params;
    usdxRewardState?: GenesisRewardState;
    hardSupplyRewardState?: GenesisRewardState;
    hardBorrowRewardState?: GenesisRewardState;
    delegatorRewardState?: GenesisRewardState;
    swapRewardState?: GenesisRewardState;
    usdxMintingClaims: USDXMintingClaim[];
    hardLiquidityProviderClaims: HardLiquidityProviderClaim[];
    delegatorClaims: DelegatorClaim[];
    swapClaims: SwapClaim[];
    savingsRewardState?: GenesisRewardState;
    savingsClaims: SavingsClaim[];
    earnRewardState?: GenesisRewardState;
    earnClaims: EarnClaim[];
}
export declare const AccumulationTime: {
    encode(message: AccumulationTime, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AccumulationTime;
    fromJSON(object: any): AccumulationTime;
    toJSON(message: AccumulationTime): unknown;
    fromPartial<I extends {
        collateralType?: string | undefined;
        previousAccumulationTime?: Date | undefined;
    } & {
        collateralType?: string | undefined;
        previousAccumulationTime?: Date | undefined;
    } & Record<Exclude<keyof I, keyof AccumulationTime>, never>>(object: I): AccumulationTime;
};
export declare const GenesisRewardState: {
    encode(message: GenesisRewardState, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GenesisRewardState;
    fromJSON(object: any): GenesisRewardState;
    toJSON(message: GenesisRewardState): unknown;
    fromPartial<I extends {
        accumulationTimes?: {
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
        }[] | undefined;
        multiRewardIndexes?: {
            collateralType?: string | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] | undefined;
        }[] | undefined;
    } & {
        accumulationTimes?: ({
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
        }[] & ({
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
        } & {
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
        } & Record<Exclude<keyof I["accumulationTimes"][number], keyof AccumulationTime>, never>)[] & Record<Exclude<keyof I["accumulationTimes"], keyof {
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
        }[]>, never>) | undefined;
        multiRewardIndexes?: ({
            collateralType?: string | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] | undefined;
        }[] & ({
            collateralType?: string | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] | undefined;
        } & {
            collateralType?: string | undefined;
            rewardIndexes?: ({
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            } & {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["multiRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["multiRewardIndexes"][number]["rewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["multiRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["multiRewardIndexes"], keyof {
            collateralType?: string | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GenesisRewardState>, never>>(object: I): GenesisRewardState;
};
export declare const GenesisState: {
    encode(message: GenesisState, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GenesisState;
    fromJSON(object: any): GenesisState;
    toJSON(message: GenesisState): unknown;
    fromPartial<I extends {
        params?: {
            usdxMintingRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            }[] | undefined;
            hardSupplyRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            hardBorrowRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            delegatorRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            swapRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            claimMultipliers?: {
                denom?: string | undefined;
                multipliers?: {
                    name?: string | undefined;
                    monthsLockup?: string | number | Long | undefined;
                    factor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
            claimEnd?: Date | undefined;
            savingsRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            earnRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
        usdxRewardState?: {
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
        hardSupplyRewardState?: {
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
        hardBorrowRewardState?: {
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
        delegatorRewardState?: {
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
        swapRewardState?: {
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
        usdxMintingClaims?: {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] | undefined;
        }[] | undefined;
        hardLiquidityProviderClaims?: {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            supplyRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
            borrowRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] | undefined;
        delegatorClaims?: {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] | undefined;
        swapClaims?: {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] | undefined;
        savingsRewardState?: {
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
        savingsClaims?: {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] | undefined;
        earnRewardState?: {
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } | undefined;
        earnClaims?: {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] | undefined;
    } & {
        params?: ({
            usdxMintingRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            }[] | undefined;
            hardSupplyRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            hardBorrowRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            delegatorRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            swapRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            claimMultipliers?: {
                denom?: string | undefined;
                multipliers?: {
                    name?: string | undefined;
                    monthsLockup?: string | number | Long | undefined;
                    factor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
            claimEnd?: Date | undefined;
            savingsRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            earnRewardPeriods?: {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            usdxMintingRewardPeriods?: ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            }[] & ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            } & {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["params"]["usdxMintingRewardPeriods"][number]["rewardsPerSecond"], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>) | undefined;
            } & Record<Exclude<keyof I["params"]["usdxMintingRewardPeriods"][number], keyof import("../../../kava/incentive/v1beta1/params").RewardPeriod>, never>)[] & Record<Exclude<keyof I["params"]["usdxMintingRewardPeriods"], keyof {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            }[]>, never>) | undefined;
            hardSupplyRewardPeriods?: ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] & ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["params"]["hardSupplyRewardPeriods"][number]["rewardsPerSecond"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["params"]["hardSupplyRewardPeriods"][number]["rewardsPerSecond"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["params"]["hardSupplyRewardPeriods"][number], keyof import("../../../kava/incentive/v1beta1/params").MultiRewardPeriod>, never>)[] & Record<Exclude<keyof I["params"]["hardSupplyRewardPeriods"], keyof {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            hardBorrowRewardPeriods?: ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] & ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["params"]["hardBorrowRewardPeriods"][number]["rewardsPerSecond"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["params"]["hardBorrowRewardPeriods"][number]["rewardsPerSecond"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["params"]["hardBorrowRewardPeriods"][number], keyof import("../../../kava/incentive/v1beta1/params").MultiRewardPeriod>, never>)[] & Record<Exclude<keyof I["params"]["hardBorrowRewardPeriods"], keyof {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            delegatorRewardPeriods?: ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] & ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["params"]["delegatorRewardPeriods"][number]["rewardsPerSecond"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["params"]["delegatorRewardPeriods"][number]["rewardsPerSecond"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["params"]["delegatorRewardPeriods"][number], keyof import("../../../kava/incentive/v1beta1/params").MultiRewardPeriod>, never>)[] & Record<Exclude<keyof I["params"]["delegatorRewardPeriods"], keyof {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            swapRewardPeriods?: ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] & ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["params"]["swapRewardPeriods"][number]["rewardsPerSecond"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["params"]["swapRewardPeriods"][number]["rewardsPerSecond"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["params"]["swapRewardPeriods"][number], keyof import("../../../kava/incentive/v1beta1/params").MultiRewardPeriod>, never>)[] & Record<Exclude<keyof I["params"]["swapRewardPeriods"], keyof {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            claimMultipliers?: ({
                denom?: string | undefined;
                multipliers?: {
                    name?: string | undefined;
                    monthsLockup?: string | number | Long | undefined;
                    factor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                denom?: string | undefined;
                multipliers?: {
                    name?: string | undefined;
                    monthsLockup?: string | number | Long | undefined;
                    factor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                denom?: string | undefined;
                multipliers?: ({
                    name?: string | undefined;
                    monthsLockup?: string | number | Long | undefined;
                    factor?: Uint8Array | undefined;
                }[] & ({
                    name?: string | undefined;
                    monthsLockup?: string | number | Long | undefined;
                    factor?: Uint8Array | undefined;
                } & {
                    name?: string | undefined;
                    monthsLockup?: string | number | (Long & {
                        high: number;
                        low: number;
                        unsigned: boolean;
                        add: (addend: string | number | Long) => Long;
                        and: (other: string | number | Long) => Long;
                        compare: (other: string | number | Long) => number;
                        comp: (other: string | number | Long) => number;
                        divide: (divisor: string | number | Long) => Long;
                        div: (divisor: string | number | Long) => Long;
                        equals: (other: string | number | Long) => boolean;
                        eq: (other: string | number | Long) => boolean;
                        getHighBits: () => number;
                        getHighBitsUnsigned: () => number;
                        getLowBits: () => number;
                        getLowBitsUnsigned: () => number;
                        getNumBitsAbs: () => number;
                        greaterThan: (other: string | number | Long) => boolean;
                        gt: (other: string | number | Long) => boolean;
                        greaterThanOrEqual: (other: string | number | Long) => boolean;
                        gte: (other: string | number | Long) => boolean;
                        ge: (other: string | number | Long) => boolean;
                        isEven: () => boolean;
                        isNegative: () => boolean;
                        isOdd: () => boolean;
                        isPositive: () => boolean;
                        isZero: () => boolean;
                        eqz: () => boolean;
                        lessThan: (other: string | number | Long) => boolean;
                        lt: (other: string | number | Long) => boolean;
                        lessThanOrEqual: (other: string | number | Long) => boolean;
                        lte: (other: string | number | Long) => boolean;
                        le: (other: string | number | Long) => boolean;
                        modulo: (other: string | number | Long) => Long;
                        mod: (other: string | number | Long) => Long;
                        rem: (other: string | number | Long) => Long;
                        multiply: (multiplier: string | number | Long) => Long;
                        mul: (multiplier: string | number | Long) => Long;
                        negate: () => Long;
                        neg: () => Long;
                        not: () => Long;
                        countLeadingZeros: () => number;
                        clz: () => number;
                        countTrailingZeros: () => number;
                        ctz: () => number;
                        notEquals: (other: string | number | Long) => boolean;
                        neq: (other: string | number | Long) => boolean;
                        ne: (other: string | number | Long) => boolean;
                        or: (other: string | number | Long) => Long;
                        shiftLeft: (numBits: number | Long) => Long;
                        shl: (numBits: number | Long) => Long;
                        shiftRight: (numBits: number | Long) => Long;
                        shr: (numBits: number | Long) => Long;
                        shiftRightUnsigned: (numBits: number | Long) => Long;
                        shru: (numBits: number | Long) => Long;
                        shr_u: (numBits: number | Long) => Long;
                        rotateLeft: (numBits: number | Long) => Long;
                        rotl: (numBits: number | Long) => Long;
                        rotateRight: (numBits: number | Long) => Long;
                        rotr: (numBits: number | Long) => Long;
                        subtract: (subtrahend: string | number | Long) => Long;
                        sub: (subtrahend: string | number | Long) => Long;
                        toInt: () => number;
                        toNumber: () => number;
                        toBytes: (le?: boolean | undefined) => number[];
                        toBytesLE: () => number[];
                        toBytesBE: () => number[];
                        toSigned: () => Long;
                        toString: (radix?: number | undefined) => string;
                        toUnsigned: () => Long;
                        xor: (other: string | number | Long) => Long;
                    } & Record<Exclude<keyof I["params"]["claimMultipliers"][number]["multipliers"][number]["monthsLockup"], keyof Long>, never>) | undefined;
                    factor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["params"]["claimMultipliers"][number]["multipliers"][number], keyof import("../../../kava/incentive/v1beta1/params").Multiplier>, never>)[] & Record<Exclude<keyof I["params"]["claimMultipliers"][number]["multipliers"], keyof {
                    name?: string | undefined;
                    monthsLockup?: string | number | Long | undefined;
                    factor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["params"]["claimMultipliers"][number], keyof import("../../../kava/incentive/v1beta1/params").MultipliersPerDenom>, never>)[] & Record<Exclude<keyof I["params"]["claimMultipliers"], keyof {
                denom?: string | undefined;
                multipliers?: {
                    name?: string | undefined;
                    monthsLockup?: string | number | Long | undefined;
                    factor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            claimEnd?: Date | undefined;
            savingsRewardPeriods?: ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] & ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["params"]["savingsRewardPeriods"][number]["rewardsPerSecond"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["params"]["savingsRewardPeriods"][number]["rewardsPerSecond"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["params"]["savingsRewardPeriods"][number], keyof import("../../../kava/incentive/v1beta1/params").MultiRewardPeriod>, never>)[] & Record<Exclude<keyof I["params"]["savingsRewardPeriods"], keyof {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            earnRewardPeriods?: ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[] & ({
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["params"]["earnRewardPeriods"][number]["rewardsPerSecond"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["params"]["earnRewardPeriods"][number]["rewardsPerSecond"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["params"]["earnRewardPeriods"][number], keyof import("../../../kava/incentive/v1beta1/params").MultiRewardPeriod>, never>)[] & Record<Exclude<keyof I["params"]["earnRewardPeriods"], keyof {
                active?: boolean | undefined;
                collateralType?: string | undefined;
                start?: Date | undefined;
                end?: Date | undefined;
                rewardsPerSecond?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["params"], keyof Params>, never>) | undefined;
        usdxRewardState?: ({
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            accumulationTimes?: ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] & ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & Record<Exclude<keyof I["usdxRewardState"]["accumulationTimes"][number], keyof AccumulationTime>, never>)[] & Record<Exclude<keyof I["usdxRewardState"]["accumulationTimes"], keyof {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[]>, never>) | undefined;
            multiRewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["usdxRewardState"]["multiRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["usdxRewardState"]["multiRewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["usdxRewardState"]["multiRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["usdxRewardState"]["multiRewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["usdxRewardState"], keyof GenesisRewardState>, never>) | undefined;
        hardSupplyRewardState?: ({
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            accumulationTimes?: ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] & ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & Record<Exclude<keyof I["hardSupplyRewardState"]["accumulationTimes"][number], keyof AccumulationTime>, never>)[] & Record<Exclude<keyof I["hardSupplyRewardState"]["accumulationTimes"], keyof {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[]>, never>) | undefined;
            multiRewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["hardSupplyRewardState"]["multiRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["hardSupplyRewardState"]["multiRewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["hardSupplyRewardState"]["multiRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["hardSupplyRewardState"]["multiRewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["hardSupplyRewardState"], keyof GenesisRewardState>, never>) | undefined;
        hardBorrowRewardState?: ({
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            accumulationTimes?: ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] & ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & Record<Exclude<keyof I["hardBorrowRewardState"]["accumulationTimes"][number], keyof AccumulationTime>, never>)[] & Record<Exclude<keyof I["hardBorrowRewardState"]["accumulationTimes"], keyof {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[]>, never>) | undefined;
            multiRewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["hardBorrowRewardState"]["multiRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["hardBorrowRewardState"]["multiRewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["hardBorrowRewardState"]["multiRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["hardBorrowRewardState"]["multiRewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["hardBorrowRewardState"], keyof GenesisRewardState>, never>) | undefined;
        delegatorRewardState?: ({
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            accumulationTimes?: ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] & ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & Record<Exclude<keyof I["delegatorRewardState"]["accumulationTimes"][number], keyof AccumulationTime>, never>)[] & Record<Exclude<keyof I["delegatorRewardState"]["accumulationTimes"], keyof {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[]>, never>) | undefined;
            multiRewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["delegatorRewardState"]["multiRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["delegatorRewardState"]["multiRewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["delegatorRewardState"]["multiRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["delegatorRewardState"]["multiRewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["delegatorRewardState"], keyof GenesisRewardState>, never>) | undefined;
        swapRewardState?: ({
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            accumulationTimes?: ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] & ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & Record<Exclude<keyof I["swapRewardState"]["accumulationTimes"][number], keyof AccumulationTime>, never>)[] & Record<Exclude<keyof I["swapRewardState"]["accumulationTimes"], keyof {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[]>, never>) | undefined;
            multiRewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["swapRewardState"]["multiRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["swapRewardState"]["multiRewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["swapRewardState"]["multiRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["swapRewardState"]["multiRewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["swapRewardState"], keyof GenesisRewardState>, never>) | undefined;
        usdxMintingClaims?: ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] | undefined;
        }[] & ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] | undefined;
        } & {
            baseClaim?: ({
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            } & {
                owner?: Uint8Array | undefined;
                reward?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["usdxMintingClaims"][number]["baseClaim"]["reward"], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>) | undefined;
            } & Record<Exclude<keyof I["usdxMintingClaims"][number]["baseClaim"], keyof import("../../../kava/incentive/v1beta1/claims").BaseClaim>, never>) | undefined;
            rewardIndexes?: ({
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            } & {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["usdxMintingClaims"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["usdxMintingClaims"][number]["rewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["usdxMintingClaims"][number], keyof USDXMintingClaim>, never>)[] & Record<Exclude<keyof I["usdxMintingClaims"], keyof {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardFactor?: Uint8Array | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
        hardLiquidityProviderClaims?: ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            supplyRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
            borrowRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] & ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            supplyRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
            borrowRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            baseClaim?: ({
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                owner?: Uint8Array | undefined;
                reward?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["baseClaim"]["reward"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["baseClaim"]["reward"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["baseClaim"], keyof import("../../../kava/incentive/v1beta1/claims").BaseMultiClaim>, never>) | undefined;
            supplyRewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["supplyRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["supplyRewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["supplyRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["supplyRewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            borrowRewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["borrowRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["borrowRewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["borrowRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number]["borrowRewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["hardLiquidityProviderClaims"][number], keyof HardLiquidityProviderClaim>, never>)[] & Record<Exclude<keyof I["hardLiquidityProviderClaims"], keyof {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            supplyRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
            borrowRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
        delegatorClaims?: ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] & ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            baseClaim?: ({
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                owner?: Uint8Array | undefined;
                reward?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["delegatorClaims"][number]["baseClaim"]["reward"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["delegatorClaims"][number]["baseClaim"]["reward"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["delegatorClaims"][number]["baseClaim"], keyof import("../../../kava/incentive/v1beta1/claims").BaseMultiClaim>, never>) | undefined;
            rewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["delegatorClaims"][number]["rewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["delegatorClaims"][number]["rewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["delegatorClaims"][number]["rewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["delegatorClaims"][number]["rewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["delegatorClaims"][number], keyof DelegatorClaim>, never>)[] & Record<Exclude<keyof I["delegatorClaims"], keyof {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
        swapClaims?: ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] & ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            baseClaim?: ({
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                owner?: Uint8Array | undefined;
                reward?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["swapClaims"][number]["baseClaim"]["reward"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["swapClaims"][number]["baseClaim"]["reward"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["swapClaims"][number]["baseClaim"], keyof import("../../../kava/incentive/v1beta1/claims").BaseMultiClaim>, never>) | undefined;
            rewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["swapClaims"][number]["rewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["swapClaims"][number]["rewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["swapClaims"][number]["rewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["swapClaims"][number]["rewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["swapClaims"][number], keyof SwapClaim>, never>)[] & Record<Exclude<keyof I["swapClaims"], keyof {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
        savingsRewardState?: ({
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            accumulationTimes?: ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] & ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & Record<Exclude<keyof I["savingsRewardState"]["accumulationTimes"][number], keyof AccumulationTime>, never>)[] & Record<Exclude<keyof I["savingsRewardState"]["accumulationTimes"], keyof {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[]>, never>) | undefined;
            multiRewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["savingsRewardState"]["multiRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["savingsRewardState"]["multiRewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["savingsRewardState"]["multiRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["savingsRewardState"]["multiRewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["savingsRewardState"], keyof GenesisRewardState>, never>) | undefined;
        savingsClaims?: ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] & ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            baseClaim?: ({
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                owner?: Uint8Array | undefined;
                reward?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["savingsClaims"][number]["baseClaim"]["reward"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["savingsClaims"][number]["baseClaim"]["reward"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["savingsClaims"][number]["baseClaim"], keyof import("../../../kava/incentive/v1beta1/claims").BaseMultiClaim>, never>) | undefined;
            rewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["savingsClaims"][number]["rewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["savingsClaims"][number]["rewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["savingsClaims"][number]["rewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["savingsClaims"][number]["rewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["savingsClaims"][number], keyof SavingsClaim>, never>)[] & Record<Exclude<keyof I["savingsClaims"], keyof {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
        earnRewardState?: ({
            accumulationTimes?: {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] | undefined;
            multiRewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            accumulationTimes?: ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[] & ({
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            } & Record<Exclude<keyof I["earnRewardState"]["accumulationTimes"][number], keyof AccumulationTime>, never>)[] & Record<Exclude<keyof I["earnRewardState"]["accumulationTimes"], keyof {
                collateralType?: string | undefined;
                previousAccumulationTime?: Date | undefined;
            }[]>, never>) | undefined;
            multiRewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["earnRewardState"]["multiRewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["earnRewardState"]["multiRewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["earnRewardState"]["multiRewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["earnRewardState"]["multiRewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["earnRewardState"], keyof GenesisRewardState>, never>) | undefined;
        earnClaims?: ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[] & ({
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        } & {
            baseClaim?: ({
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } & {
                owner?: Uint8Array | undefined;
                reward?: ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] & ({
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & {
                    denom?: string | undefined;
                    amount?: string | undefined;
                } & Record<Exclude<keyof I["earnClaims"][number]["baseClaim"]["reward"][number], keyof import("../../../cosmos/base/v1beta1/coin").Coin>, never>)[] & Record<Exclude<keyof I["earnClaims"][number]["baseClaim"]["reward"], keyof {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["earnClaims"][number]["baseClaim"], keyof import("../../../kava/incentive/v1beta1/claims").BaseMultiClaim>, never>) | undefined;
            rewardIndexes?: ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] & ({
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            } & {
                collateralType?: string | undefined;
                rewardIndexes?: ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] & ({
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["earnClaims"][number]["rewardIndexes"][number]["rewardIndexes"][number], keyof import("../../../kava/incentive/v1beta1/claims").RewardIndex>, never>)[] & Record<Exclude<keyof I["earnClaims"][number]["rewardIndexes"][number]["rewardIndexes"], keyof {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["earnClaims"][number]["rewardIndexes"][number], keyof MultiRewardIndex>, never>)[] & Record<Exclude<keyof I["earnClaims"][number]["rewardIndexes"], keyof {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["earnClaims"][number], keyof EarnClaim>, never>)[] & Record<Exclude<keyof I["earnClaims"], keyof {
            baseClaim?: {
                owner?: Uint8Array | undefined;
                reward?: {
                    denom?: string | undefined;
                    amount?: string | undefined;
                }[] | undefined;
            } | undefined;
            rewardIndexes?: {
                collateralType?: string | undefined;
                rewardIndexes?: {
                    collateralType?: string | undefined;
                    rewardFactor?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GenesisState>, never>>(object: I): GenesisState;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Long ? string | number | Long : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
