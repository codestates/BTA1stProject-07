"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoinsProto = exports.BorrowInterestFactor = exports.SupplyInterestFactor = exports.Borrow = exports.Deposit = exports.InterestRateModel = exports.BorrowLimit = exports.MoneyMarket = exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var coin_1 = require("../../../cosmos/base/v1beta1/coin");
exports.protobufPackage = 'kava.hard.v1beta1';
function createBaseParams() {
    return { moneyMarkets: [], minimumBorrowUsdValue: '' };
}
exports.Params = {
    encode: function (message, writer) {
        var e_1, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _b = __values(message.moneyMarkets), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                exports.MoneyMarket.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (message.minimumBorrowUsdValue !== '') {
            writer.uint32(18).string(message.minimumBorrowUsdValue);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseParams();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.moneyMarkets.push(exports.MoneyMarket.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.minimumBorrowUsdValue = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            moneyMarkets: Array.isArray(object === null || object === void 0 ? void 0 : object.moneyMarkets)
                ? object.moneyMarkets.map(function (e) { return exports.MoneyMarket.fromJSON(e); })
                : [],
            minimumBorrowUsdValue: isSet(object.minimumBorrowUsdValue)
                ? String(object.minimumBorrowUsdValue)
                : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.moneyMarkets) {
            obj.moneyMarkets = message.moneyMarkets.map(function (e) {
                return e ? exports.MoneyMarket.toJSON(e) : undefined;
            });
        }
        else {
            obj.moneyMarkets = [];
        }
        message.minimumBorrowUsdValue !== undefined &&
            (obj.minimumBorrowUsdValue = message.minimumBorrowUsdValue);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseParams();
        message.moneyMarkets =
            ((_a = object.moneyMarkets) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.MoneyMarket.fromPartial(e); })) || [];
        message.minimumBorrowUsdValue = (_b = object.minimumBorrowUsdValue) !== null && _b !== void 0 ? _b : '';
        return message;
    },
};
function createBaseMoneyMarket() {
    return {
        denom: '',
        borrowLimit: undefined,
        spotMarketId: '',
        conversionFactor: '',
        interestRateModel: undefined,
        reserveFactor: '',
        keeperRewardPercentage: '',
    };
}
exports.MoneyMarket = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.denom !== '') {
            writer.uint32(10).string(message.denom);
        }
        if (message.borrowLimit !== undefined) {
            exports.BorrowLimit.encode(message.borrowLimit, writer.uint32(18).fork()).ldelim();
        }
        if (message.spotMarketId !== '') {
            writer.uint32(26).string(message.spotMarketId);
        }
        if (message.conversionFactor !== '') {
            writer.uint32(34).string(message.conversionFactor);
        }
        if (message.interestRateModel !== undefined) {
            exports.InterestRateModel.encode(message.interestRateModel, writer.uint32(42).fork()).ldelim();
        }
        if (message.reserveFactor !== '') {
            writer.uint32(50).string(message.reserveFactor);
        }
        if (message.keeperRewardPercentage !== '') {
            writer.uint32(58).string(message.keeperRewardPercentage);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMoneyMarket();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.denom = reader.string();
                    break;
                case 2:
                    message.borrowLimit = exports.BorrowLimit.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.spotMarketId = reader.string();
                    break;
                case 4:
                    message.conversionFactor = reader.string();
                    break;
                case 5:
                    message.interestRateModel = exports.InterestRateModel.decode(reader, reader.uint32());
                    break;
                case 6:
                    message.reserveFactor = reader.string();
                    break;
                case 7:
                    message.keeperRewardPercentage = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            denom: isSet(object.denom) ? String(object.denom) : '',
            borrowLimit: isSet(object.borrowLimit)
                ? exports.BorrowLimit.fromJSON(object.borrowLimit)
                : undefined,
            spotMarketId: isSet(object.spotMarketId)
                ? String(object.spotMarketId)
                : '',
            conversionFactor: isSet(object.conversionFactor)
                ? String(object.conversionFactor)
                : '',
            interestRateModel: isSet(object.interestRateModel)
                ? exports.InterestRateModel.fromJSON(object.interestRateModel)
                : undefined,
            reserveFactor: isSet(object.reserveFactor)
                ? String(object.reserveFactor)
                : '',
            keeperRewardPercentage: isSet(object.keeperRewardPercentage)
                ? String(object.keeperRewardPercentage)
                : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.denom !== undefined && (obj.denom = message.denom);
        message.borrowLimit !== undefined &&
            (obj.borrowLimit = message.borrowLimit
                ? exports.BorrowLimit.toJSON(message.borrowLimit)
                : undefined);
        message.spotMarketId !== undefined &&
            (obj.spotMarketId = message.spotMarketId);
        message.conversionFactor !== undefined &&
            (obj.conversionFactor = message.conversionFactor);
        message.interestRateModel !== undefined &&
            (obj.interestRateModel = message.interestRateModel
                ? exports.InterestRateModel.toJSON(message.interestRateModel)
                : undefined);
        message.reserveFactor !== undefined &&
            (obj.reserveFactor = message.reserveFactor);
        message.keeperRewardPercentage !== undefined &&
            (obj.keeperRewardPercentage = message.keeperRewardPercentage);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseMoneyMarket();
        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : '';
        message.borrowLimit =
            object.borrowLimit !== undefined && object.borrowLimit !== null
                ? exports.BorrowLimit.fromPartial(object.borrowLimit)
                : undefined;
        message.spotMarketId = (_b = object.spotMarketId) !== null && _b !== void 0 ? _b : '';
        message.conversionFactor = (_c = object.conversionFactor) !== null && _c !== void 0 ? _c : '';
        message.interestRateModel =
            object.interestRateModel !== undefined &&
                object.interestRateModel !== null
                ? exports.InterestRateModel.fromPartial(object.interestRateModel)
                : undefined;
        message.reserveFactor = (_d = object.reserveFactor) !== null && _d !== void 0 ? _d : '';
        message.keeperRewardPercentage = (_e = object.keeperRewardPercentage) !== null && _e !== void 0 ? _e : '';
        return message;
    },
};
function createBaseBorrowLimit() {
    return { hasMaxLimit: false, maximumLimit: '', loanToValue: '' };
}
exports.BorrowLimit = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.hasMaxLimit === true) {
            writer.uint32(8).bool(message.hasMaxLimit);
        }
        if (message.maximumLimit !== '') {
            writer.uint32(18).string(message.maximumLimit);
        }
        if (message.loanToValue !== '') {
            writer.uint32(26).string(message.loanToValue);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseBorrowLimit();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.hasMaxLimit = reader.bool();
                    break;
                case 2:
                    message.maximumLimit = reader.string();
                    break;
                case 3:
                    message.loanToValue = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            hasMaxLimit: isSet(object.hasMaxLimit)
                ? Boolean(object.hasMaxLimit)
                : false,
            maximumLimit: isSet(object.maximumLimit)
                ? String(object.maximumLimit)
                : '',
            loanToValue: isSet(object.loanToValue) ? String(object.loanToValue) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.hasMaxLimit !== undefined &&
            (obj.hasMaxLimit = message.hasMaxLimit);
        message.maximumLimit !== undefined &&
            (obj.maximumLimit = message.maximumLimit);
        message.loanToValue !== undefined &&
            (obj.loanToValue = message.loanToValue);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseBorrowLimit();
        message.hasMaxLimit = (_a = object.hasMaxLimit) !== null && _a !== void 0 ? _a : false;
        message.maximumLimit = (_b = object.maximumLimit) !== null && _b !== void 0 ? _b : '';
        message.loanToValue = (_c = object.loanToValue) !== null && _c !== void 0 ? _c : '';
        return message;
    },
};
function createBaseInterestRateModel() {
    return { baseRateApy: '', baseMultiplier: '', kink: '', jumpMultiplier: '' };
}
exports.InterestRateModel = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.baseRateApy !== '') {
            writer.uint32(10).string(message.baseRateApy);
        }
        if (message.baseMultiplier !== '') {
            writer.uint32(18).string(message.baseMultiplier);
        }
        if (message.kink !== '') {
            writer.uint32(26).string(message.kink);
        }
        if (message.jumpMultiplier !== '') {
            writer.uint32(34).string(message.jumpMultiplier);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseInterestRateModel();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.baseRateApy = reader.string();
                    break;
                case 2:
                    message.baseMultiplier = reader.string();
                    break;
                case 3:
                    message.kink = reader.string();
                    break;
                case 4:
                    message.jumpMultiplier = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            baseRateApy: isSet(object.baseRateApy) ? String(object.baseRateApy) : '',
            baseMultiplier: isSet(object.baseMultiplier)
                ? String(object.baseMultiplier)
                : '',
            kink: isSet(object.kink) ? String(object.kink) : '',
            jumpMultiplier: isSet(object.jumpMultiplier)
                ? String(object.jumpMultiplier)
                : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.baseRateApy !== undefined &&
            (obj.baseRateApy = message.baseRateApy);
        message.baseMultiplier !== undefined &&
            (obj.baseMultiplier = message.baseMultiplier);
        message.kink !== undefined && (obj.kink = message.kink);
        message.jumpMultiplier !== undefined &&
            (obj.jumpMultiplier = message.jumpMultiplier);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseInterestRateModel();
        message.baseRateApy = (_a = object.baseRateApy) !== null && _a !== void 0 ? _a : '';
        message.baseMultiplier = (_b = object.baseMultiplier) !== null && _b !== void 0 ? _b : '';
        message.kink = (_c = object.kink) !== null && _c !== void 0 ? _c : '';
        message.jumpMultiplier = (_d = object.jumpMultiplier) !== null && _d !== void 0 ? _d : '';
        return message;
    },
};
function createBaseDeposit() {
    return { depositor: '', amount: [], index: [] };
}
exports.Deposit = {
    encode: function (message, writer) {
        var e_2, _a, e_3, _b;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.depositor !== '') {
            writer.uint32(10).string(message.depositor);
        }
        try {
            for (var _c = __values(message.amount), _d = _c.next(); !_d.done; _d = _c.next()) {
                var v = _d.value;
                coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _e = __values(message.index), _f = _e.next(); !_f.done; _f = _e.next()) {
                var v = _f.value;
                exports.SupplyInterestFactor.encode(v, writer.uint32(26).fork()).ldelim();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeposit();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.depositor = reader.string();
                    break;
                case 2:
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.index.push(exports.SupplyInterestFactor.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            depositor: isSet(object.depositor) ? String(object.depositor) : '',
            amount: Array.isArray(object === null || object === void 0 ? void 0 : object.amount)
                ? object.amount.map(function (e) { return coin_1.Coin.fromJSON(e); })
                : [],
            index: Array.isArray(object === null || object === void 0 ? void 0 : object.index)
                ? object.index.map(function (e) { return exports.SupplyInterestFactor.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.depositor !== undefined && (obj.depositor = message.depositor);
        if (message.amount) {
            obj.amount = message.amount.map(function (e) { return (e ? coin_1.Coin.toJSON(e) : undefined); });
        }
        else {
            obj.amount = [];
        }
        if (message.index) {
            obj.index = message.index.map(function (e) {
                return e ? exports.SupplyInterestFactor.toJSON(e) : undefined;
            });
        }
        else {
            obj.index = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseDeposit();
        message.depositor = (_a = object.depositor) !== null && _a !== void 0 ? _a : '';
        message.amount = ((_b = object.amount) === null || _b === void 0 ? void 0 : _b.map(function (e) { return coin_1.Coin.fromPartial(e); })) || [];
        message.index =
            ((_c = object.index) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.SupplyInterestFactor.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseBorrow() {
    return { borrower: '', amount: [], index: [] };
}
exports.Borrow = {
    encode: function (message, writer) {
        var e_4, _a, e_5, _b;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.borrower !== '') {
            writer.uint32(10).string(message.borrower);
        }
        try {
            for (var _c = __values(message.amount), _d = _c.next(); !_d.done; _d = _c.next()) {
                var v = _d.value;
                coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_4) throw e_4.error; }
        }
        try {
            for (var _e = __values(message.index), _f = _e.next(); !_f.done; _f = _e.next()) {
                var v = _f.value;
                exports.BorrowInterestFactor.encode(v, writer.uint32(26).fork()).ldelim();
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_5) throw e_5.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseBorrow();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.borrower = reader.string();
                    break;
                case 2:
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.index.push(exports.BorrowInterestFactor.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            borrower: isSet(object.borrower) ? String(object.borrower) : '',
            amount: Array.isArray(object === null || object === void 0 ? void 0 : object.amount)
                ? object.amount.map(function (e) { return coin_1.Coin.fromJSON(e); })
                : [],
            index: Array.isArray(object === null || object === void 0 ? void 0 : object.index)
                ? object.index.map(function (e) { return exports.BorrowInterestFactor.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.borrower !== undefined && (obj.borrower = message.borrower);
        if (message.amount) {
            obj.amount = message.amount.map(function (e) { return (e ? coin_1.Coin.toJSON(e) : undefined); });
        }
        else {
            obj.amount = [];
        }
        if (message.index) {
            obj.index = message.index.map(function (e) {
                return e ? exports.BorrowInterestFactor.toJSON(e) : undefined;
            });
        }
        else {
            obj.index = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseBorrow();
        message.borrower = (_a = object.borrower) !== null && _a !== void 0 ? _a : '';
        message.amount = ((_b = object.amount) === null || _b === void 0 ? void 0 : _b.map(function (e) { return coin_1.Coin.fromPartial(e); })) || [];
        message.index =
            ((_c = object.index) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.BorrowInterestFactor.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseSupplyInterestFactor() {
    return { denom: '', value: '' };
}
exports.SupplyInterestFactor = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.denom !== '') {
            writer.uint32(10).string(message.denom);
        }
        if (message.value !== '') {
            writer.uint32(18).string(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSupplyInterestFactor();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.denom = reader.string();
                    break;
                case 2:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            denom: isSet(object.denom) ? String(object.denom) : '',
            value: isSet(object.value) ? String(object.value) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.denom !== undefined && (obj.denom = message.denom);
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseSupplyInterestFactor();
        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : '';
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : '';
        return message;
    },
};
function createBaseBorrowInterestFactor() {
    return { denom: '', value: '' };
}
exports.BorrowInterestFactor = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.denom !== '') {
            writer.uint32(10).string(message.denom);
        }
        if (message.value !== '') {
            writer.uint32(18).string(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseBorrowInterestFactor();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.denom = reader.string();
                    break;
                case 2:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            denom: isSet(object.denom) ? String(object.denom) : '',
            value: isSet(object.value) ? String(object.value) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.denom !== undefined && (obj.denom = message.denom);
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseBorrowInterestFactor();
        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : '';
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : '';
        return message;
    },
};
function createBaseCoinsProto() {
    return { coins: [] };
}
exports.CoinsProto = {
    encode: function (message, writer) {
        var e_6, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _b = __values(message.coins), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_6) throw e_6.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCoinsProto();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            coins: Array.isArray(object === null || object === void 0 ? void 0 : object.coins)
                ? object.coins.map(function (e) { return coin_1.Coin.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.coins) {
            obj.coins = message.coins.map(function (e) { return (e ? coin_1.Coin.toJSON(e) : undefined); });
        }
        else {
            obj.coins = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseCoinsProto();
        message.coins = ((_a = object.coins) === null || _a === void 0 ? void 0 : _a.map(function (e) { return coin_1.Coin.fromPartial(e); })) || [];
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
