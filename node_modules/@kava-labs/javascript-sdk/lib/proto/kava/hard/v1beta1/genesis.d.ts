import Long from 'long';
import _m0 from 'protobufjs/minimal';
import { Params, Deposit, Borrow } from '../../../kava/hard/v1beta1/hard';
import { Coin } from '../../../cosmos/base/v1beta1/coin';
export declare const protobufPackage = "kava.hard.v1beta1";
/** GenesisState defines the hard module's genesis state. */
export interface GenesisState {
    params?: Params;
    previousAccumulationTimes: GenesisAccumulationTime[];
    deposits: Deposit[];
    borrows: Borrow[];
    totalSupplied: Coin[];
    totalBorrowed: Coin[];
    totalReserves: Coin[];
}
/** GenesisAccumulationTime stores the previous distribution time and its corresponding denom. */
export interface GenesisAccumulationTime {
    collateralType: string;
    previousAccumulationTime?: Date;
    supplyInterestFactor: string;
    borrowInterestFactor: string;
}
export declare const GenesisState: {
    encode(message: GenesisState, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GenesisState;
    fromJSON(object: any): GenesisState;
    toJSON(message: GenesisState): unknown;
    fromPartial<I extends {
        params?: {
            moneyMarkets?: {
                denom?: string | undefined;
                borrowLimit?: {
                    hasMaxLimit?: boolean | undefined;
                    maximumLimit?: string | undefined;
                    loanToValue?: string | undefined;
                } | undefined;
                spotMarketId?: string | undefined;
                conversionFactor?: string | undefined;
                interestRateModel?: {
                    baseRateApy?: string | undefined;
                    baseMultiplier?: string | undefined;
                    kink?: string | undefined;
                    jumpMultiplier?: string | undefined;
                } | undefined;
                reserveFactor?: string | undefined;
                keeperRewardPercentage?: string | undefined;
            }[] | undefined;
            minimumBorrowUsdValue?: string | undefined;
        } | undefined;
        previousAccumulationTimes?: {
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
            supplyInterestFactor?: string | undefined;
            borrowInterestFactor?: string | undefined;
        }[] | undefined;
        deposits?: {
            depositor?: string | undefined;
            amount?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            index?: {
                denom?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        borrows?: {
            borrower?: string | undefined;
            amount?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            index?: {
                denom?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
        }[] | undefined;
        totalSupplied?: {
            denom?: string | undefined;
            amount?: string | undefined;
        }[] | undefined;
        totalBorrowed?: {
            denom?: string | undefined;
            amount?: string | undefined;
        }[] | undefined;
        totalReserves?: {
            denom?: string | undefined;
            amount?: string | undefined;
        }[] | undefined;
    } & {
        params?: ({
            moneyMarkets?: {
                denom?: string | undefined;
                borrowLimit?: {
                    hasMaxLimit?: boolean | undefined;
                    maximumLimit?: string | undefined;
                    loanToValue?: string | undefined;
                } | undefined;
                spotMarketId?: string | undefined;
                conversionFactor?: string | undefined;
                interestRateModel?: {
                    baseRateApy?: string | undefined;
                    baseMultiplier?: string | undefined;
                    kink?: string | undefined;
                    jumpMultiplier?: string | undefined;
                } | undefined;
                reserveFactor?: string | undefined;
                keeperRewardPercentage?: string | undefined;
            }[] | undefined;
            minimumBorrowUsdValue?: string | undefined;
        } & {
            moneyMarkets?: ({
                denom?: string | undefined;
                borrowLimit?: {
                    hasMaxLimit?: boolean | undefined;
                    maximumLimit?: string | undefined;
                    loanToValue?: string | undefined;
                } | undefined;
                spotMarketId?: string | undefined;
                conversionFactor?: string | undefined;
                interestRateModel?: {
                    baseRateApy?: string | undefined;
                    baseMultiplier?: string | undefined;
                    kink?: string | undefined;
                    jumpMultiplier?: string | undefined;
                } | undefined;
                reserveFactor?: string | undefined;
                keeperRewardPercentage?: string | undefined;
            }[] & ({
                denom?: string | undefined;
                borrowLimit?: {
                    hasMaxLimit?: boolean | undefined;
                    maximumLimit?: string | undefined;
                    loanToValue?: string | undefined;
                } | undefined;
                spotMarketId?: string | undefined;
                conversionFactor?: string | undefined;
                interestRateModel?: {
                    baseRateApy?: string | undefined;
                    baseMultiplier?: string | undefined;
                    kink?: string | undefined;
                    jumpMultiplier?: string | undefined;
                } | undefined;
                reserveFactor?: string | undefined;
                keeperRewardPercentage?: string | undefined;
            } & {
                denom?: string | undefined;
                borrowLimit?: ({
                    hasMaxLimit?: boolean | undefined;
                    maximumLimit?: string | undefined;
                    loanToValue?: string | undefined;
                } & {
                    hasMaxLimit?: boolean | undefined;
                    maximumLimit?: string | undefined;
                    loanToValue?: string | undefined;
                } & Record<Exclude<keyof I["params"]["moneyMarkets"][number]["borrowLimit"], keyof import("../../../kava/hard/v1beta1/hard").BorrowLimit>, never>) | undefined;
                spotMarketId?: string | undefined;
                conversionFactor?: string | undefined;
                interestRateModel?: ({
                    baseRateApy?: string | undefined;
                    baseMultiplier?: string | undefined;
                    kink?: string | undefined;
                    jumpMultiplier?: string | undefined;
                } & {
                    baseRateApy?: string | undefined;
                    baseMultiplier?: string | undefined;
                    kink?: string | undefined;
                    jumpMultiplier?: string | undefined;
                } & Record<Exclude<keyof I["params"]["moneyMarkets"][number]["interestRateModel"], keyof import("../../../kava/hard/v1beta1/hard").InterestRateModel>, never>) | undefined;
                reserveFactor?: string | undefined;
                keeperRewardPercentage?: string | undefined;
            } & Record<Exclude<keyof I["params"]["moneyMarkets"][number], keyof import("../../../kava/hard/v1beta1/hard").MoneyMarket>, never>)[] & Record<Exclude<keyof I["params"]["moneyMarkets"], keyof {
                denom?: string | undefined;
                borrowLimit?: {
                    hasMaxLimit?: boolean | undefined;
                    maximumLimit?: string | undefined;
                    loanToValue?: string | undefined;
                } | undefined;
                spotMarketId?: string | undefined;
                conversionFactor?: string | undefined;
                interestRateModel?: {
                    baseRateApy?: string | undefined;
                    baseMultiplier?: string | undefined;
                    kink?: string | undefined;
                    jumpMultiplier?: string | undefined;
                } | undefined;
                reserveFactor?: string | undefined;
                keeperRewardPercentage?: string | undefined;
            }[]>, never>) | undefined;
            minimumBorrowUsdValue?: string | undefined;
        } & Record<Exclude<keyof I["params"], keyof Params>, never>) | undefined;
        previousAccumulationTimes?: ({
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
            supplyInterestFactor?: string | undefined;
            borrowInterestFactor?: string | undefined;
        }[] & ({
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
            supplyInterestFactor?: string | undefined;
            borrowInterestFactor?: string | undefined;
        } & {
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
            supplyInterestFactor?: string | undefined;
            borrowInterestFactor?: string | undefined;
        } & Record<Exclude<keyof I["previousAccumulationTimes"][number], keyof GenesisAccumulationTime>, never>)[] & Record<Exclude<keyof I["previousAccumulationTimes"], keyof {
            collateralType?: string | undefined;
            previousAccumulationTime?: Date | undefined;
            supplyInterestFactor?: string | undefined;
            borrowInterestFactor?: string | undefined;
        }[]>, never>) | undefined;
        deposits?: ({
            depositor?: string | undefined;
            amount?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            index?: {
                denom?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
        }[] & ({
            depositor?: string | undefined;
            amount?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            index?: {
                denom?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
        } & {
            depositor?: string | undefined;
            amount?: ({
                denom?: string | undefined;
                amount?: string | undefined;
            }[] & ({
                denom?: string | undefined;
                amount?: string | undefined;
            } & {
                denom?: string | undefined;
                amount?: string | undefined;
            } & Record<Exclude<keyof I["deposits"][number]["amount"][number], keyof Coin>, never>)[] & Record<Exclude<keyof I["deposits"][number]["amount"], keyof {
                denom?: string | undefined;
                amount?: string | undefined;
            }[]>, never>) | undefined;
            index?: ({
                denom?: string | undefined;
                value?: string | undefined;
            }[] & ({
                denom?: string | undefined;
                value?: string | undefined;
            } & {
                denom?: string | undefined;
                value?: string | undefined;
            } & Record<Exclude<keyof I["deposits"][number]["index"][number], keyof import("../../../kava/hard/v1beta1/hard").SupplyInterestFactor>, never>)[] & Record<Exclude<keyof I["deposits"][number]["index"], keyof {
                denom?: string | undefined;
                value?: string | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["deposits"][number], keyof Deposit>, never>)[] & Record<Exclude<keyof I["deposits"], keyof {
            depositor?: string | undefined;
            amount?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            index?: {
                denom?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
        borrows?: ({
            borrower?: string | undefined;
            amount?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            index?: {
                denom?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
        }[] & ({
            borrower?: string | undefined;
            amount?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            index?: {
                denom?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
        } & {
            borrower?: string | undefined;
            amount?: ({
                denom?: string | undefined;
                amount?: string | undefined;
            }[] & ({
                denom?: string | undefined;
                amount?: string | undefined;
            } & {
                denom?: string | undefined;
                amount?: string | undefined;
            } & Record<Exclude<keyof I["borrows"][number]["amount"][number], keyof Coin>, never>)[] & Record<Exclude<keyof I["borrows"][number]["amount"], keyof {
                denom?: string | undefined;
                amount?: string | undefined;
            }[]>, never>) | undefined;
            index?: ({
                denom?: string | undefined;
                value?: string | undefined;
            }[] & ({
                denom?: string | undefined;
                value?: string | undefined;
            } & {
                denom?: string | undefined;
                value?: string | undefined;
            } & Record<Exclude<keyof I["borrows"][number]["index"][number], keyof import("../../../kava/hard/v1beta1/hard").BorrowInterestFactor>, never>)[] & Record<Exclude<keyof I["borrows"][number]["index"], keyof {
                denom?: string | undefined;
                value?: string | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["borrows"][number], keyof Borrow>, never>)[] & Record<Exclude<keyof I["borrows"], keyof {
            borrower?: string | undefined;
            amount?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            index?: {
                denom?: string | undefined;
                value?: string | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
        totalSupplied?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        }[] & ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & Record<Exclude<keyof I["totalSupplied"][number], keyof Coin>, never>)[] & Record<Exclude<keyof I["totalSupplied"], keyof {
            denom?: string | undefined;
            amount?: string | undefined;
        }[]>, never>) | undefined;
        totalBorrowed?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        }[] & ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & Record<Exclude<keyof I["totalBorrowed"][number], keyof Coin>, never>)[] & Record<Exclude<keyof I["totalBorrowed"], keyof {
            denom?: string | undefined;
            amount?: string | undefined;
        }[]>, never>) | undefined;
        totalReserves?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        }[] & ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & Record<Exclude<keyof I["totalReserves"][number], keyof Coin>, never>)[] & Record<Exclude<keyof I["totalReserves"], keyof {
            denom?: string | undefined;
            amount?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GenesisState>, never>>(object: I): GenesisState;
};
export declare const GenesisAccumulationTime: {
    encode(message: GenesisAccumulationTime, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GenesisAccumulationTime;
    fromJSON(object: any): GenesisAccumulationTime;
    toJSON(message: GenesisAccumulationTime): unknown;
    fromPartial<I extends {
        collateralType?: string | undefined;
        previousAccumulationTime?: Date | undefined;
        supplyInterestFactor?: string | undefined;
        borrowInterestFactor?: string | undefined;
    } & {
        collateralType?: string | undefined;
        previousAccumulationTime?: Date | undefined;
        supplyInterestFactor?: string | undefined;
        borrowInterestFactor?: string | undefined;
    } & Record<Exclude<keyof I, keyof GenesisAccumulationTime>, never>>(object: I): GenesisAccumulationTime;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Long ? string | number | Long : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
