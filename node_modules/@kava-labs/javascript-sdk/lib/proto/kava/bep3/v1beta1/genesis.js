"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var bep3_1 = require("../../../kava/bep3/v1beta1/bep3");
var timestamp_1 = require("../../../google/protobuf/timestamp");
exports.protobufPackage = 'kava.bep3.v1beta1';
function createBaseGenesisState() {
    return {
        params: undefined,
        atomicSwaps: [],
        supplies: [],
        previousBlockTime: undefined,
    };
}
exports.GenesisState = {
    encode: function (message, writer) {
        var e_1, _a, e_2, _b;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.params !== undefined) {
            bep3_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        try {
            for (var _c = __values(message.atomicSwaps), _d = _c.next(); !_d.done; _d = _c.next()) {
                var v = _d.value;
                bep3_1.AtomicSwap.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var _e = __values(message.supplies), _f = _e.next(); !_f.done; _f = _e.next()) {
                var v = _f.value;
                bep3_1.AssetSupply.encode(v, writer.uint32(26).fork()).ldelim();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
        if (message.previousBlockTime !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.previousBlockTime), writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGenesisState();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = bep3_1.Params.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.atomicSwaps.push(bep3_1.AtomicSwap.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.supplies.push(bep3_1.AssetSupply.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.previousBlockTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            params: isSet(object.params) ? bep3_1.Params.fromJSON(object.params) : undefined,
            atomicSwaps: Array.isArray(object === null || object === void 0 ? void 0 : object.atomicSwaps)
                ? object.atomicSwaps.map(function (e) { return bep3_1.AtomicSwap.fromJSON(e); })
                : [],
            supplies: Array.isArray(object === null || object === void 0 ? void 0 : object.supplies)
                ? object.supplies.map(function (e) { return bep3_1.AssetSupply.fromJSON(e); })
                : [],
            previousBlockTime: isSet(object.previousBlockTime)
                ? fromJsonTimestamp(object.previousBlockTime)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.params !== undefined &&
            (obj.params = message.params ? bep3_1.Params.toJSON(message.params) : undefined);
        if (message.atomicSwaps) {
            obj.atomicSwaps = message.atomicSwaps.map(function (e) {
                return e ? bep3_1.AtomicSwap.toJSON(e) : undefined;
            });
        }
        else {
            obj.atomicSwaps = [];
        }
        if (message.supplies) {
            obj.supplies = message.supplies.map(function (e) {
                return e ? bep3_1.AssetSupply.toJSON(e) : undefined;
            });
        }
        else {
            obj.supplies = [];
        }
        message.previousBlockTime !== undefined &&
            (obj.previousBlockTime = message.previousBlockTime.toISOString());
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGenesisState();
        message.params =
            object.params !== undefined && object.params !== null
                ? bep3_1.Params.fromPartial(object.params)
                : undefined;
        message.atomicSwaps =
            ((_a = object.atomicSwaps) === null || _a === void 0 ? void 0 : _a.map(function (e) { return bep3_1.AtomicSwap.fromPartial(e); })) || [];
        message.supplies =
            ((_b = object.supplies) === null || _b === void 0 ? void 0 : _b.map(function (e) { return bep3_1.AssetSupply.fromPartial(e); })) || [];
        message.previousBlockTime = (_c = object.previousBlockTime) !== null && _c !== void 0 ? _c : undefined;
        return message;
    },
};
function toTimestamp(date) {
    var seconds = numberToLong(date.getTime() / 1000);
    var nanos = (date.getTime() % 1000) * 1000000;
    return { seconds: seconds, nanos: nanos };
}
function fromTimestamp(t) {
    var millis = t.seconds.toNumber() * 1000;
    millis += t.nanos / 1000000;
    return new Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof Date) {
        return o;
    }
    else if (typeof o === 'string') {
        return new Date(o);
    }
    else {
        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));
    }
}
function numberToLong(number) {
    return long_1.default.fromNumber(number);
}
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
