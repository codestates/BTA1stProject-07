"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryClientImpl = exports.QueryAtomicSwapsResponse = exports.QueryAtomicSwapsRequest = exports.AtomicSwapResponse = exports.QueryAtomicSwapResponse = exports.QueryAtomicSwapRequest = exports.QueryAssetSuppliesResponse = exports.QueryAssetSuppliesRequest = exports.QueryAssetSupplyResponse = exports.AssetSupplyResponse = exports.QueryAssetSupplyRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var bep3_1 = require("../../../kava/bep3/v1beta1/bep3");
var coin_1 = require("../../../cosmos/base/v1beta1/coin");
var duration_1 = require("../../../google/protobuf/duration");
var pagination_1 = require("../../../cosmos/base/query/v1beta1/pagination");
exports.protobufPackage = 'kava.bep3.v1beta1';
function createBaseQueryParamsRequest() {
    return {};
}
exports.QueryParamsRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseQueryParamsRequest();
        return message;
    },
};
function createBaseQueryParamsResponse() {
    return { params: undefined };
}
exports.QueryParamsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.params !== undefined) {
            bep3_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = bep3_1.Params.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            params: isSet(object.params) ? bep3_1.Params.fromJSON(object.params) : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.params !== undefined &&
            (obj.params = message.params ? bep3_1.Params.toJSON(message.params) : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseQueryParamsResponse();
        message.params =
            object.params !== undefined && object.params !== null
                ? bep3_1.Params.fromPartial(object.params)
                : undefined;
        return message;
    },
};
function createBaseQueryAssetSupplyRequest() {
    return { denom: '' };
}
exports.QueryAssetSupplyRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.denom !== '') {
            writer.uint32(10).string(message.denom);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryAssetSupplyRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.denom = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            denom: isSet(object.denom) ? String(object.denom) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.denom !== undefined && (obj.denom = message.denom);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryAssetSupplyRequest();
        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : '';
        return message;
    },
};
function createBaseAssetSupplyResponse() {
    return {
        incomingSupply: undefined,
        outgoingSupply: undefined,
        currentSupply: undefined,
        timeLimitedCurrentSupply: undefined,
        timeElapsed: undefined,
    };
}
exports.AssetSupplyResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.incomingSupply !== undefined) {
            coin_1.Coin.encode(message.incomingSupply, writer.uint32(10).fork()).ldelim();
        }
        if (message.outgoingSupply !== undefined) {
            coin_1.Coin.encode(message.outgoingSupply, writer.uint32(18).fork()).ldelim();
        }
        if (message.currentSupply !== undefined) {
            coin_1.Coin.encode(message.currentSupply, writer.uint32(26).fork()).ldelim();
        }
        if (message.timeLimitedCurrentSupply !== undefined) {
            coin_1.Coin.encode(message.timeLimitedCurrentSupply, writer.uint32(34).fork()).ldelim();
        }
        if (message.timeElapsed !== undefined) {
            duration_1.Duration.encode(message.timeElapsed, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAssetSupplyResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.incomingSupply = coin_1.Coin.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.outgoingSupply = coin_1.Coin.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.currentSupply = coin_1.Coin.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.timeLimitedCurrentSupply = coin_1.Coin.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.timeElapsed = duration_1.Duration.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            incomingSupply: isSet(object.incomingSupply)
                ? coin_1.Coin.fromJSON(object.incomingSupply)
                : undefined,
            outgoingSupply: isSet(object.outgoingSupply)
                ? coin_1.Coin.fromJSON(object.outgoingSupply)
                : undefined,
            currentSupply: isSet(object.currentSupply)
                ? coin_1.Coin.fromJSON(object.currentSupply)
                : undefined,
            timeLimitedCurrentSupply: isSet(object.timeLimitedCurrentSupply)
                ? coin_1.Coin.fromJSON(object.timeLimitedCurrentSupply)
                : undefined,
            timeElapsed: isSet(object.timeElapsed)
                ? duration_1.Duration.fromJSON(object.timeElapsed)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.incomingSupply !== undefined &&
            (obj.incomingSupply = message.incomingSupply
                ? coin_1.Coin.toJSON(message.incomingSupply)
                : undefined);
        message.outgoingSupply !== undefined &&
            (obj.outgoingSupply = message.outgoingSupply
                ? coin_1.Coin.toJSON(message.outgoingSupply)
                : undefined);
        message.currentSupply !== undefined &&
            (obj.currentSupply = message.currentSupply
                ? coin_1.Coin.toJSON(message.currentSupply)
                : undefined);
        message.timeLimitedCurrentSupply !== undefined &&
            (obj.timeLimitedCurrentSupply = message.timeLimitedCurrentSupply
                ? coin_1.Coin.toJSON(message.timeLimitedCurrentSupply)
                : undefined);
        message.timeElapsed !== undefined &&
            (obj.timeElapsed = message.timeElapsed
                ? duration_1.Duration.toJSON(message.timeElapsed)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseAssetSupplyResponse();
        message.incomingSupply =
            object.incomingSupply !== undefined && object.incomingSupply !== null
                ? coin_1.Coin.fromPartial(object.incomingSupply)
                : undefined;
        message.outgoingSupply =
            object.outgoingSupply !== undefined && object.outgoingSupply !== null
                ? coin_1.Coin.fromPartial(object.outgoingSupply)
                : undefined;
        message.currentSupply =
            object.currentSupply !== undefined && object.currentSupply !== null
                ? coin_1.Coin.fromPartial(object.currentSupply)
                : undefined;
        message.timeLimitedCurrentSupply =
            object.timeLimitedCurrentSupply !== undefined &&
                object.timeLimitedCurrentSupply !== null
                ? coin_1.Coin.fromPartial(object.timeLimitedCurrentSupply)
                : undefined;
        message.timeElapsed =
            object.timeElapsed !== undefined && object.timeElapsed !== null
                ? duration_1.Duration.fromPartial(object.timeElapsed)
                : undefined;
        return message;
    },
};
function createBaseQueryAssetSupplyResponse() {
    return { assetSupply: undefined };
}
exports.QueryAssetSupplyResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.assetSupply !== undefined) {
            exports.AssetSupplyResponse.encode(message.assetSupply, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryAssetSupplyResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.assetSupply = exports.AssetSupplyResponse.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            assetSupply: isSet(object.assetSupply)
                ? exports.AssetSupplyResponse.fromJSON(object.assetSupply)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.assetSupply !== undefined &&
            (obj.assetSupply = message.assetSupply
                ? exports.AssetSupplyResponse.toJSON(message.assetSupply)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseQueryAssetSupplyResponse();
        message.assetSupply =
            object.assetSupply !== undefined && object.assetSupply !== null
                ? exports.AssetSupplyResponse.fromPartial(object.assetSupply)
                : undefined;
        return message;
    },
};
function createBaseQueryAssetSuppliesRequest() {
    return {};
}
exports.QueryAssetSuppliesRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryAssetSuppliesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseQueryAssetSuppliesRequest();
        return message;
    },
};
function createBaseQueryAssetSuppliesResponse() {
    return { assetSupplies: [] };
}
exports.QueryAssetSuppliesResponse = {
    encode: function (message, writer) {
        var e_1, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _b = __values(message.assetSupplies), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                exports.AssetSupplyResponse.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryAssetSuppliesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.assetSupplies.push(exports.AssetSupplyResponse.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            assetSupplies: Array.isArray(object === null || object === void 0 ? void 0 : object.assetSupplies)
                ? object.assetSupplies.map(function (e) { return exports.AssetSupplyResponse.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.assetSupplies) {
            obj.assetSupplies = message.assetSupplies.map(function (e) {
                return e ? exports.AssetSupplyResponse.toJSON(e) : undefined;
            });
        }
        else {
            obj.assetSupplies = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryAssetSuppliesResponse();
        message.assetSupplies =
            ((_a = object.assetSupplies) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.AssetSupplyResponse.fromPartial(e); })) ||
                [];
        return message;
    },
};
function createBaseQueryAtomicSwapRequest() {
    return { swapId: '' };
}
exports.QueryAtomicSwapRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.swapId !== '') {
            writer.uint32(10).string(message.swapId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryAtomicSwapRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.swapId = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            swapId: isSet(object.swapId) ? String(object.swapId) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.swapId !== undefined && (obj.swapId = message.swapId);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryAtomicSwapRequest();
        message.swapId = (_a = object.swapId) !== null && _a !== void 0 ? _a : '';
        return message;
    },
};
function createBaseQueryAtomicSwapResponse() {
    return { atomicSwap: undefined };
}
exports.QueryAtomicSwapResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.atomicSwap !== undefined) {
            exports.AtomicSwapResponse.encode(message.atomicSwap, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryAtomicSwapResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.atomicSwap = exports.AtomicSwapResponse.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            atomicSwap: isSet(object.atomicSwap)
                ? exports.AtomicSwapResponse.fromJSON(object.atomicSwap)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.atomicSwap !== undefined &&
            (obj.atomicSwap = message.atomicSwap
                ? exports.AtomicSwapResponse.toJSON(message.atomicSwap)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseQueryAtomicSwapResponse();
        message.atomicSwap =
            object.atomicSwap !== undefined && object.atomicSwap !== null
                ? exports.AtomicSwapResponse.fromPartial(object.atomicSwap)
                : undefined;
        return message;
    },
};
function createBaseAtomicSwapResponse() {
    return {
        id: '',
        amount: [],
        randomNumberHash: '',
        expireHeight: long_1.default.UZERO,
        timestamp: long_1.default.ZERO,
        sender: '',
        recipient: '',
        senderOtherChain: '',
        recipientOtherChain: '',
        closedBlock: long_1.default.ZERO,
        status: 0,
        crossChain: false,
        direction: 0,
    };
}
exports.AtomicSwapResponse = {
    encode: function (message, writer) {
        var e_2, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.id !== '') {
            writer.uint32(10).string(message.id);
        }
        try {
            for (var _b = __values(message.amount), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        if (message.randomNumberHash !== '') {
            writer.uint32(26).string(message.randomNumberHash);
        }
        if (!message.expireHeight.isZero()) {
            writer.uint32(32).uint64(message.expireHeight);
        }
        if (!message.timestamp.isZero()) {
            writer.uint32(40).int64(message.timestamp);
        }
        if (message.sender !== '') {
            writer.uint32(50).string(message.sender);
        }
        if (message.recipient !== '') {
            writer.uint32(58).string(message.recipient);
        }
        if (message.senderOtherChain !== '') {
            writer.uint32(66).string(message.senderOtherChain);
        }
        if (message.recipientOtherChain !== '') {
            writer.uint32(74).string(message.recipientOtherChain);
        }
        if (!message.closedBlock.isZero()) {
            writer.uint32(80).int64(message.closedBlock);
        }
        if (message.status !== 0) {
            writer.uint32(88).int32(message.status);
        }
        if (message.crossChain === true) {
            writer.uint32(96).bool(message.crossChain);
        }
        if (message.direction !== 0) {
            writer.uint32(104).int32(message.direction);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAtomicSwapResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.id = reader.string();
                    break;
                case 2:
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.randomNumberHash = reader.string();
                    break;
                case 4:
                    message.expireHeight = reader.uint64();
                    break;
                case 5:
                    message.timestamp = reader.int64();
                    break;
                case 6:
                    message.sender = reader.string();
                    break;
                case 7:
                    message.recipient = reader.string();
                    break;
                case 8:
                    message.senderOtherChain = reader.string();
                    break;
                case 9:
                    message.recipientOtherChain = reader.string();
                    break;
                case 10:
                    message.closedBlock = reader.int64();
                    break;
                case 11:
                    message.status = reader.int32();
                    break;
                case 12:
                    message.crossChain = reader.bool();
                    break;
                case 13:
                    message.direction = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            id: isSet(object.id) ? String(object.id) : '',
            amount: Array.isArray(object === null || object === void 0 ? void 0 : object.amount)
                ? object.amount.map(function (e) { return coin_1.Coin.fromJSON(e); })
                : [],
            randomNumberHash: isSet(object.randomNumberHash)
                ? String(object.randomNumberHash)
                : '',
            expireHeight: isSet(object.expireHeight)
                ? long_1.default.fromString(object.expireHeight)
                : long_1.default.UZERO,
            timestamp: isSet(object.timestamp)
                ? long_1.default.fromString(object.timestamp)
                : long_1.default.ZERO,
            sender: isSet(object.sender) ? String(object.sender) : '',
            recipient: isSet(object.recipient) ? String(object.recipient) : '',
            senderOtherChain: isSet(object.senderOtherChain)
                ? String(object.senderOtherChain)
                : '',
            recipientOtherChain: isSet(object.recipientOtherChain)
                ? String(object.recipientOtherChain)
                : '',
            closedBlock: isSet(object.closedBlock)
                ? long_1.default.fromString(object.closedBlock)
                : long_1.default.ZERO,
            status: isSet(object.status) ? (0, bep3_1.swapStatusFromJSON)(object.status) : 0,
            crossChain: isSet(object.crossChain) ? Boolean(object.crossChain) : false,
            direction: isSet(object.direction)
                ? (0, bep3_1.swapDirectionFromJSON)(object.direction)
                : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.id !== undefined && (obj.id = message.id);
        if (message.amount) {
            obj.amount = message.amount.map(function (e) { return (e ? coin_1.Coin.toJSON(e) : undefined); });
        }
        else {
            obj.amount = [];
        }
        message.randomNumberHash !== undefined &&
            (obj.randomNumberHash = message.randomNumberHash);
        message.expireHeight !== undefined &&
            (obj.expireHeight = (message.expireHeight || long_1.default.UZERO).toString());
        message.timestamp !== undefined &&
            (obj.timestamp = (message.timestamp || long_1.default.ZERO).toString());
        message.sender !== undefined && (obj.sender = message.sender);
        message.recipient !== undefined && (obj.recipient = message.recipient);
        message.senderOtherChain !== undefined &&
            (obj.senderOtherChain = message.senderOtherChain);
        message.recipientOtherChain !== undefined &&
            (obj.recipientOtherChain = message.recipientOtherChain);
        message.closedBlock !== undefined &&
            (obj.closedBlock = (message.closedBlock || long_1.default.ZERO).toString());
        message.status !== undefined &&
            (obj.status = (0, bep3_1.swapStatusToJSON)(message.status));
        message.crossChain !== undefined && (obj.crossChain = message.crossChain);
        message.direction !== undefined &&
            (obj.direction = (0, bep3_1.swapDirectionToJSON)(message.direction));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        var message = createBaseAtomicSwapResponse();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : '';
        message.amount = ((_b = object.amount) === null || _b === void 0 ? void 0 : _b.map(function (e) { return coin_1.Coin.fromPartial(e); })) || [];
        message.randomNumberHash = (_c = object.randomNumberHash) !== null && _c !== void 0 ? _c : '';
        message.expireHeight =
            object.expireHeight !== undefined && object.expireHeight !== null
                ? long_1.default.fromValue(object.expireHeight)
                : long_1.default.UZERO;
        message.timestamp =
            object.timestamp !== undefined && object.timestamp !== null
                ? long_1.default.fromValue(object.timestamp)
                : long_1.default.ZERO;
        message.sender = (_d = object.sender) !== null && _d !== void 0 ? _d : '';
        message.recipient = (_e = object.recipient) !== null && _e !== void 0 ? _e : '';
        message.senderOtherChain = (_f = object.senderOtherChain) !== null && _f !== void 0 ? _f : '';
        message.recipientOtherChain = (_g = object.recipientOtherChain) !== null && _g !== void 0 ? _g : '';
        message.closedBlock =
            object.closedBlock !== undefined && object.closedBlock !== null
                ? long_1.default.fromValue(object.closedBlock)
                : long_1.default.ZERO;
        message.status = (_h = object.status) !== null && _h !== void 0 ? _h : 0;
        message.crossChain = (_j = object.crossChain) !== null && _j !== void 0 ? _j : false;
        message.direction = (_k = object.direction) !== null && _k !== void 0 ? _k : 0;
        return message;
    },
};
function createBaseQueryAtomicSwapsRequest() {
    return {
        involve: '',
        expiration: long_1.default.UZERO,
        status: 0,
        direction: 0,
        pagination: undefined,
    };
}
exports.QueryAtomicSwapsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.involve !== '') {
            writer.uint32(10).string(message.involve);
        }
        if (!message.expiration.isZero()) {
            writer.uint32(16).uint64(message.expiration);
        }
        if (message.status !== 0) {
            writer.uint32(24).int32(message.status);
        }
        if (message.direction !== 0) {
            writer.uint32(32).int32(message.direction);
        }
        if (message.pagination !== undefined) {
            pagination_1.PageRequest.encode(message.pagination, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryAtomicSwapsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.involve = reader.string();
                    break;
                case 2:
                    message.expiration = reader.uint64();
                    break;
                case 3:
                    message.status = reader.int32();
                    break;
                case 4:
                    message.direction = reader.int32();
                    break;
                case 5:
                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            involve: isSet(object.involve) ? String(object.involve) : '',
            expiration: isSet(object.expiration)
                ? long_1.default.fromString(object.expiration)
                : long_1.default.UZERO,
            status: isSet(object.status) ? (0, bep3_1.swapStatusFromJSON)(object.status) : 0,
            direction: isSet(object.direction)
                ? (0, bep3_1.swapDirectionFromJSON)(object.direction)
                : 0,
            pagination: isSet(object.pagination)
                ? pagination_1.PageRequest.fromJSON(object.pagination)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.involve !== undefined && (obj.involve = message.involve);
        message.expiration !== undefined &&
            (obj.expiration = (message.expiration || long_1.default.UZERO).toString());
        message.status !== undefined &&
            (obj.status = (0, bep3_1.swapStatusToJSON)(message.status));
        message.direction !== undefined &&
            (obj.direction = (0, bep3_1.swapDirectionToJSON)(message.direction));
        message.pagination !== undefined &&
            (obj.pagination = message.pagination
                ? pagination_1.PageRequest.toJSON(message.pagination)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseQueryAtomicSwapsRequest();
        message.involve = (_a = object.involve) !== null && _a !== void 0 ? _a : '';
        message.expiration =
            object.expiration !== undefined && object.expiration !== null
                ? long_1.default.fromValue(object.expiration)
                : long_1.default.UZERO;
        message.status = (_b = object.status) !== null && _b !== void 0 ? _b : 0;
        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : 0;
        message.pagination =
            object.pagination !== undefined && object.pagination !== null
                ? pagination_1.PageRequest.fromPartial(object.pagination)
                : undefined;
        return message;
    },
};
function createBaseQueryAtomicSwapsResponse() {
    return { atomicSwaps: [], pagination: undefined };
}
exports.QueryAtomicSwapsResponse = {
    encode: function (message, writer) {
        var e_3, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _b = __values(message.atomicSwaps), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                exports.AtomicSwapResponse.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        if (message.pagination !== undefined) {
            pagination_1.PageResponse.encode(message.pagination, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryAtomicSwapsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.atomicSwaps.push(exports.AtomicSwapResponse.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            atomicSwaps: Array.isArray(object === null || object === void 0 ? void 0 : object.atomicSwaps)
                ? object.atomicSwaps.map(function (e) { return exports.AtomicSwapResponse.fromJSON(e); })
                : [],
            pagination: isSet(object.pagination)
                ? pagination_1.PageResponse.fromJSON(object.pagination)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.atomicSwaps) {
            obj.atomicSwaps = message.atomicSwaps.map(function (e) {
                return e ? exports.AtomicSwapResponse.toJSON(e) : undefined;
            });
        }
        else {
            obj.atomicSwaps = [];
        }
        message.pagination !== undefined &&
            (obj.pagination = message.pagination
                ? pagination_1.PageResponse.toJSON(message.pagination)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryAtomicSwapsResponse();
        message.atomicSwaps =
            ((_a = object.atomicSwaps) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.AtomicSwapResponse.fromPartial(e); })) || [];
        message.pagination =
            object.pagination !== undefined && object.pagination !== null
                ? pagination_1.PageResponse.fromPartial(object.pagination)
                : undefined;
        return message;
    },
};
var QueryClientImpl = /** @class */ (function () {
    function QueryClientImpl(rpc) {
        this.rpc = rpc;
        this.Params = this.Params.bind(this);
        this.AssetSupply = this.AssetSupply.bind(this);
        this.AssetSupplies = this.AssetSupplies.bind(this);
        this.AtomicSwap = this.AtomicSwap.bind(this);
        this.AtomicSwaps = this.AtomicSwaps.bind(this);
    }
    QueryClientImpl.prototype.Params = function (request) {
        var data = exports.QueryParamsRequest.encode(request).finish();
        var promise = this.rpc.request('kava.bep3.v1beta1.Query', 'Params', data);
        return promise.then(function (data) {
            return exports.QueryParamsResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    QueryClientImpl.prototype.AssetSupply = function (request) {
        var data = exports.QueryAssetSupplyRequest.encode(request).finish();
        var promise = this.rpc.request('kava.bep3.v1beta1.Query', 'AssetSupply', data);
        return promise.then(function (data) {
            return exports.QueryAssetSupplyResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    QueryClientImpl.prototype.AssetSupplies = function (request) {
        var data = exports.QueryAssetSuppliesRequest.encode(request).finish();
        var promise = this.rpc.request('kava.bep3.v1beta1.Query', 'AssetSupplies', data);
        return promise.then(function (data) {
            return exports.QueryAssetSuppliesResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    QueryClientImpl.prototype.AtomicSwap = function (request) {
        var data = exports.QueryAtomicSwapRequest.encode(request).finish();
        var promise = this.rpc.request('kava.bep3.v1beta1.Query', 'AtomicSwap', data);
        return promise.then(function (data) {
            return exports.QueryAtomicSwapResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    QueryClientImpl.prototype.AtomicSwaps = function (request) {
        var data = exports.QueryAtomicSwapsRequest.encode(request).finish();
        var promise = this.rpc.request('kava.bep3.v1beta1.Query', 'AtomicSwaps', data);
        return promise.then(function (data) {
            return exports.QueryAtomicSwapsResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    return QueryClientImpl;
}());
exports.QueryClientImpl = QueryClientImpl;
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
