import Long from 'long';
import _m0 from 'protobufjs/minimal';
import { Params } from '../../../kava/kavadist/v1beta1/params';
import { Coin } from '../../../cosmos/base/v1beta1/coin';
export declare const protobufPackage = "kava.kavadist.v1beta1";
/** QueryParamsRequest defines the request type for querying x/kavadist parameters. */
export interface QueryParamsRequest {
}
/** QueryParamsResponse defines the response type for querying x/kavadist parameters. */
export interface QueryParamsResponse {
    params?: Params;
}
/** QueryBalanceRequest defines the request type for querying x/kavadist balance. */
export interface QueryBalanceRequest {
}
/** QueryBalanceResponse defines the response type for querying x/kavadist balance. */
export interface QueryBalanceResponse {
    coins: Coin[];
}
export declare const QueryParamsRequest: {
    encode(_: QueryParamsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryParamsRequest;
    fromJSON(_: any): QueryParamsRequest;
    toJSON(_: QueryParamsRequest): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): QueryParamsRequest;
};
export declare const QueryParamsResponse: {
    encode(message: QueryParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryParamsResponse;
    fromJSON(object: any): QueryParamsResponse;
    toJSON(message: QueryParamsResponse): unknown;
    fromPartial<I extends {
        params?: {
            active?: boolean | undefined;
            periods?: {
                start?: Date | undefined;
                end?: Date | undefined;
                inflation?: Uint8Array | undefined;
            }[] | undefined;
            infrastructureParams?: {
                infrastructurePeriods?: {
                    start?: Date | undefined;
                    end?: Date | undefined;
                    inflation?: Uint8Array | undefined;
                }[] | undefined;
                coreRewards?: {
                    address?: Uint8Array | undefined;
                    weight?: string | undefined;
                }[] | undefined;
                partnerRewards?: {
                    address?: Uint8Array | undefined;
                    rewardsPerSecond?: {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        } | undefined;
    } & {
        params?: ({
            active?: boolean | undefined;
            periods?: {
                start?: Date | undefined;
                end?: Date | undefined;
                inflation?: Uint8Array | undefined;
            }[] | undefined;
            infrastructureParams?: {
                infrastructurePeriods?: {
                    start?: Date | undefined;
                    end?: Date | undefined;
                    inflation?: Uint8Array | undefined;
                }[] | undefined;
                coreRewards?: {
                    address?: Uint8Array | undefined;
                    weight?: string | undefined;
                }[] | undefined;
                partnerRewards?: {
                    address?: Uint8Array | undefined;
                    rewardsPerSecond?: {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        } & {
            active?: boolean | undefined;
            periods?: ({
                start?: Date | undefined;
                end?: Date | undefined;
                inflation?: Uint8Array | undefined;
            }[] & ({
                start?: Date | undefined;
                end?: Date | undefined;
                inflation?: Uint8Array | undefined;
            } & {
                start?: Date | undefined;
                end?: Date | undefined;
                inflation?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["params"]["periods"][number], keyof import("../../../kava/kavadist/v1beta1/params").Period>, never>)[] & Record<Exclude<keyof I["params"]["periods"], keyof {
                start?: Date | undefined;
                end?: Date | undefined;
                inflation?: Uint8Array | undefined;
            }[]>, never>) | undefined;
            infrastructureParams?: ({
                infrastructurePeriods?: {
                    start?: Date | undefined;
                    end?: Date | undefined;
                    inflation?: Uint8Array | undefined;
                }[] | undefined;
                coreRewards?: {
                    address?: Uint8Array | undefined;
                    weight?: string | undefined;
                }[] | undefined;
                partnerRewards?: {
                    address?: Uint8Array | undefined;
                    rewardsPerSecond?: {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } | undefined;
                }[] | undefined;
            } & {
                infrastructurePeriods?: ({
                    start?: Date | undefined;
                    end?: Date | undefined;
                    inflation?: Uint8Array | undefined;
                }[] & ({
                    start?: Date | undefined;
                    end?: Date | undefined;
                    inflation?: Uint8Array | undefined;
                } & {
                    start?: Date | undefined;
                    end?: Date | undefined;
                    inflation?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["params"]["infrastructureParams"]["infrastructurePeriods"][number], keyof import("../../../kava/kavadist/v1beta1/params").Period>, never>)[] & Record<Exclude<keyof I["params"]["infrastructureParams"]["infrastructurePeriods"], keyof {
                    start?: Date | undefined;
                    end?: Date | undefined;
                    inflation?: Uint8Array | undefined;
                }[]>, never>) | undefined;
                coreRewards?: ({
                    address?: Uint8Array | undefined;
                    weight?: string | undefined;
                }[] & ({
                    address?: Uint8Array | undefined;
                    weight?: string | undefined;
                } & {
                    address?: Uint8Array | undefined;
                    weight?: string | undefined;
                } & Record<Exclude<keyof I["params"]["infrastructureParams"]["coreRewards"][number], keyof import("../../../kava/kavadist/v1beta1/params").CoreReward>, never>)[] & Record<Exclude<keyof I["params"]["infrastructureParams"]["coreRewards"], keyof {
                    address?: Uint8Array | undefined;
                    weight?: string | undefined;
                }[]>, never>) | undefined;
                partnerRewards?: ({
                    address?: Uint8Array | undefined;
                    rewardsPerSecond?: {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } | undefined;
                }[] & ({
                    address?: Uint8Array | undefined;
                    rewardsPerSecond?: {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } | undefined;
                } & {
                    address?: Uint8Array | undefined;
                    rewardsPerSecond?: ({
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } & {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } & Record<Exclude<keyof I["params"]["infrastructureParams"]["partnerRewards"][number]["rewardsPerSecond"], keyof Coin>, never>) | undefined;
                } & Record<Exclude<keyof I["params"]["infrastructureParams"]["partnerRewards"][number], keyof import("../../../kava/kavadist/v1beta1/params").PartnerReward>, never>)[] & Record<Exclude<keyof I["params"]["infrastructureParams"]["partnerRewards"], keyof {
                    address?: Uint8Array | undefined;
                    rewardsPerSecond?: {
                        denom?: string | undefined;
                        amount?: string | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["params"]["infrastructureParams"], keyof import("../../../kava/kavadist/v1beta1/params").InfrastructureParams>, never>) | undefined;
        } & Record<Exclude<keyof I["params"], keyof Params>, never>) | undefined;
    } & Record<Exclude<keyof I, "params">, never>>(object: I): QueryParamsResponse;
};
export declare const QueryBalanceRequest: {
    encode(_: QueryBalanceRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryBalanceRequest;
    fromJSON(_: any): QueryBalanceRequest;
    toJSON(_: QueryBalanceRequest): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): QueryBalanceRequest;
};
export declare const QueryBalanceResponse: {
    encode(message: QueryBalanceResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryBalanceResponse;
    fromJSON(object: any): QueryBalanceResponse;
    toJSON(message: QueryBalanceResponse): unknown;
    fromPartial<I extends {
        coins?: {
            denom?: string | undefined;
            amount?: string | undefined;
        }[] | undefined;
    } & {
        coins?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        }[] & ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & Record<Exclude<keyof I["coins"][number], keyof Coin>, never>)[] & Record<Exclude<keyof I["coins"], keyof {
            denom?: string | undefined;
            amount?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "coins">, never>>(object: I): QueryBalanceResponse;
};
/** Query defines the gRPC querier service. */
export interface Query {
    /** Params queries the parameters of x/kavadist module. */
    Params(request: QueryParamsRequest): Promise<QueryParamsResponse>;
    /** Balance queries the balance of all coins of x/kavadist module. */
    Balance(request: QueryBalanceRequest): Promise<QueryBalanceResponse>;
}
export declare class QueryClientImpl implements Query {
    private readonly rpc;
    constructor(rpc: Rpc);
    Params(request: QueryParamsRequest): Promise<QueryParamsResponse>;
    Balance(request: QueryBalanceRequest): Promise<QueryBalanceResponse>;
}
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Long ? string | number | Long : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
