"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Period = exports.PartnerReward = exports.CoreReward = exports.InfrastructureParams = exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var coin_1 = require("../../../cosmos/base/v1beta1/coin");
var timestamp_1 = require("../../../google/protobuf/timestamp");
exports.protobufPackage = 'kava.kavadist.v1beta1';
function createBaseParams() {
    return { active: false, periods: [], infrastructureParams: undefined };
}
exports.Params = {
    encode: function (message, writer) {
        var e_1, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.active === true) {
            writer.uint32(8).bool(message.active);
        }
        try {
            for (var _b = __values(message.periods), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                exports.Period.encode(v, writer.uint32(26).fork()).ldelim();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (message.infrastructureParams !== undefined) {
            exports.InfrastructureParams.encode(message.infrastructureParams, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseParams();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.active = reader.bool();
                    break;
                case 3:
                    message.periods.push(exports.Period.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.infrastructureParams = exports.InfrastructureParams.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            active: isSet(object.active) ? Boolean(object.active) : false,
            periods: Array.isArray(object === null || object === void 0 ? void 0 : object.periods)
                ? object.periods.map(function (e) { return exports.Period.fromJSON(e); })
                : [],
            infrastructureParams: isSet(object.infrastructureParams)
                ? exports.InfrastructureParams.fromJSON(object.infrastructureParams)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.active !== undefined && (obj.active = message.active);
        if (message.periods) {
            obj.periods = message.periods.map(function (e) {
                return e ? exports.Period.toJSON(e) : undefined;
            });
        }
        else {
            obj.periods = [];
        }
        message.infrastructureParams !== undefined &&
            (obj.infrastructureParams = message.infrastructureParams
                ? exports.InfrastructureParams.toJSON(message.infrastructureParams)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseParams();
        message.active = (_a = object.active) !== null && _a !== void 0 ? _a : false;
        message.periods = ((_b = object.periods) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.Period.fromPartial(e); })) || [];
        message.infrastructureParams =
            object.infrastructureParams !== undefined &&
                object.infrastructureParams !== null
                ? exports.InfrastructureParams.fromPartial(object.infrastructureParams)
                : undefined;
        return message;
    },
};
function createBaseInfrastructureParams() {
    return { infrastructurePeriods: [], coreRewards: [], partnerRewards: [] };
}
exports.InfrastructureParams = {
    encode: function (message, writer) {
        var e_2, _a, e_3, _b, e_4, _c;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _d = __values(message.infrastructurePeriods), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.Period.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _f = __values(message.coreRewards), _g = _f.next(); !_g.done; _g = _f.next()) {
                var v = _g.value;
                exports.CoreReward.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            for (var _h = __values(message.partnerRewards), _j = _h.next(); !_j.done; _j = _h.next()) {
                var v = _j.value;
                exports.PartnerReward.encode(v, writer.uint32(26).fork()).ldelim();
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseInfrastructureParams();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.infrastructurePeriods.push(exports.Period.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.coreRewards.push(exports.CoreReward.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.partnerRewards.push(exports.PartnerReward.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            infrastructurePeriods: Array.isArray(object === null || object === void 0 ? void 0 : object.infrastructurePeriods)
                ? object.infrastructurePeriods.map(function (e) { return exports.Period.fromJSON(e); })
                : [],
            coreRewards: Array.isArray(object === null || object === void 0 ? void 0 : object.coreRewards)
                ? object.coreRewards.map(function (e) { return exports.CoreReward.fromJSON(e); })
                : [],
            partnerRewards: Array.isArray(object === null || object === void 0 ? void 0 : object.partnerRewards)
                ? object.partnerRewards.map(function (e) { return exports.PartnerReward.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.infrastructurePeriods) {
            obj.infrastructurePeriods = message.infrastructurePeriods.map(function (e) {
                return e ? exports.Period.toJSON(e) : undefined;
            });
        }
        else {
            obj.infrastructurePeriods = [];
        }
        if (message.coreRewards) {
            obj.coreRewards = message.coreRewards.map(function (e) {
                return e ? exports.CoreReward.toJSON(e) : undefined;
            });
        }
        else {
            obj.coreRewards = [];
        }
        if (message.partnerRewards) {
            obj.partnerRewards = message.partnerRewards.map(function (e) {
                return e ? exports.PartnerReward.toJSON(e) : undefined;
            });
        }
        else {
            obj.partnerRewards = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseInfrastructureParams();
        message.infrastructurePeriods =
            ((_a = object.infrastructurePeriods) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.Period.fromPartial(e); })) || [];
        message.coreRewards =
            ((_b = object.coreRewards) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.CoreReward.fromPartial(e); })) || [];
        message.partnerRewards =
            ((_c = object.partnerRewards) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.PartnerReward.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseCoreReward() {
    return { address: new Uint8Array(), weight: '' };
}
exports.CoreReward = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.address.length !== 0) {
            writer.uint32(10).bytes(message.address);
        }
        if (message.weight !== '') {
            writer.uint32(18).string(message.weight);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCoreReward();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.address = reader.bytes();
                    break;
                case 2:
                    message.weight = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            address: isSet(object.address)
                ? bytesFromBase64(object.address)
                : new Uint8Array(),
            weight: isSet(object.weight) ? String(object.weight) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.address !== undefined &&
            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));
        message.weight !== undefined && (obj.weight = message.weight);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseCoreReward();
        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : new Uint8Array();
        message.weight = (_b = object.weight) !== null && _b !== void 0 ? _b : '';
        return message;
    },
};
function createBasePartnerReward() {
    return { address: new Uint8Array(), rewardsPerSecond: undefined };
}
exports.PartnerReward = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.address.length !== 0) {
            writer.uint32(10).bytes(message.address);
        }
        if (message.rewardsPerSecond !== undefined) {
            coin_1.Coin.encode(message.rewardsPerSecond, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBasePartnerReward();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.address = reader.bytes();
                    break;
                case 2:
                    message.rewardsPerSecond = coin_1.Coin.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            address: isSet(object.address)
                ? bytesFromBase64(object.address)
                : new Uint8Array(),
            rewardsPerSecond: isSet(object.rewardsPerSecond)
                ? coin_1.Coin.fromJSON(object.rewardsPerSecond)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.address !== undefined &&
            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));
        message.rewardsPerSecond !== undefined &&
            (obj.rewardsPerSecond = message.rewardsPerSecond
                ? coin_1.Coin.toJSON(message.rewardsPerSecond)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBasePartnerReward();
        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : new Uint8Array();
        message.rewardsPerSecond =
            object.rewardsPerSecond !== undefined && object.rewardsPerSecond !== null
                ? coin_1.Coin.fromPartial(object.rewardsPerSecond)
                : undefined;
        return message;
    },
};
function createBasePeriod() {
    return { start: undefined, end: undefined, inflation: new Uint8Array() };
}
exports.Period = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.start !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.start), writer.uint32(10).fork()).ldelim();
        }
        if (message.end !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.end), writer.uint32(18).fork()).ldelim();
        }
        if (message.inflation.length !== 0) {
            writer.uint32(26).bytes(message.inflation);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBasePeriod();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.start = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.end = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.inflation = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            start: isSet(object.start) ? fromJsonTimestamp(object.start) : undefined,
            end: isSet(object.end) ? fromJsonTimestamp(object.end) : undefined,
            inflation: isSet(object.inflation)
                ? bytesFromBase64(object.inflation)
                : new Uint8Array(),
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.start !== undefined && (obj.start = message.start.toISOString());
        message.end !== undefined && (obj.end = message.end.toISOString());
        message.inflation !== undefined &&
            (obj.inflation = base64FromBytes(message.inflation !== undefined ? message.inflation : new Uint8Array()));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBasePeriod();
        message.start = (_a = object.start) !== null && _a !== void 0 ? _a : undefined;
        message.end = (_b = object.end) !== null && _b !== void 0 ? _b : undefined;
        message.inflation = (_c = object.inflation) !== null && _c !== void 0 ? _c : new Uint8Array();
        return message;
    },
};
var globalThis = (function () {
    if (typeof globalThis !== 'undefined')
        return globalThis;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
var atob = globalThis.atob ||
    (function (b64) { return globalThis.Buffer.from(b64, 'base64').toString('binary'); });
function bytesFromBase64(b64) {
    var bin = atob(b64);
    var arr = new Uint8Array(bin.length);
    for (var i = 0; i < bin.length; ++i) {
        arr[i] = bin.charCodeAt(i);
    }
    return arr;
}
var btoa = globalThis.btoa ||
    (function (bin) { return globalThis.Buffer.from(bin, 'binary').toString('base64'); });
function base64FromBytes(arr) {
    var e_5, _a;
    var bin = [];
    try {
        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {
            var byte = arr_1_1.value;
            bin.push(String.fromCharCode(byte));
        }
    }
    catch (e_5_1) { e_5 = { error: e_5_1 }; }
    finally {
        try {
            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);
        }
        finally { if (e_5) throw e_5.error; }
    }
    return btoa(bin.join(''));
}
function toTimestamp(date) {
    var seconds = numberToLong(date.getTime() / 1000);
    var nanos = (date.getTime() % 1000) * 1000000;
    return { seconds: seconds, nanos: nanos };
}
function fromTimestamp(t) {
    var millis = t.seconds.toNumber() * 1000;
    millis += t.nanos / 1000000;
    return new Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof Date) {
        return o;
    }
    else if (typeof o === 'string') {
        return new Date(o);
    }
    else {
        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));
    }
}
function numberToLong(number) {
    return long_1.default.fromNumber(number);
}
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
