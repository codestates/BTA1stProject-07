"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryClientImpl = exports.QueryDelegatedBalanceResponse = exports.QueryDelegatedBalanceRequest = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var coin_1 = require("../../../cosmos/base/v1beta1/coin");
exports.protobufPackage = 'kava.liquid.v1beta1';
function createBaseQueryDelegatedBalanceRequest() {
    return { delegator: '' };
}
exports.QueryDelegatedBalanceRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.delegator !== '') {
            writer.uint32(10).string(message.delegator);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryDelegatedBalanceRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegator = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            delegator: isSet(object.delegator) ? String(object.delegator) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.delegator !== undefined && (obj.delegator = message.delegator);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryDelegatedBalanceRequest();
        message.delegator = (_a = object.delegator) !== null && _a !== void 0 ? _a : '';
        return message;
    },
};
function createBaseQueryDelegatedBalanceResponse() {
    return { vested: undefined, vesting: undefined };
}
exports.QueryDelegatedBalanceResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.vested !== undefined) {
            coin_1.Coin.encode(message.vested, writer.uint32(10).fork()).ldelim();
        }
        if (message.vesting !== undefined) {
            coin_1.Coin.encode(message.vesting, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryDelegatedBalanceResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.vested = coin_1.Coin.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.vesting = coin_1.Coin.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            vested: isSet(object.vested) ? coin_1.Coin.fromJSON(object.vested) : undefined,
            vesting: isSet(object.vesting)
                ? coin_1.Coin.fromJSON(object.vesting)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.vested !== undefined &&
            (obj.vested = message.vested ? coin_1.Coin.toJSON(message.vested) : undefined);
        message.vesting !== undefined &&
            (obj.vesting = message.vesting
                ? coin_1.Coin.toJSON(message.vesting)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseQueryDelegatedBalanceResponse();
        message.vested =
            object.vested !== undefined && object.vested !== null
                ? coin_1.Coin.fromPartial(object.vested)
                : undefined;
        message.vesting =
            object.vesting !== undefined && object.vesting !== null
                ? coin_1.Coin.fromPartial(object.vesting)
                : undefined;
        return message;
    },
};
var QueryClientImpl = /** @class */ (function () {
    function QueryClientImpl(rpc) {
        this.rpc = rpc;
        this.DelegatedBalance = this.DelegatedBalance.bind(this);
    }
    QueryClientImpl.prototype.DelegatedBalance = function (request) {
        var data = exports.QueryDelegatedBalanceRequest.encode(request).finish();
        var promise = this.rpc.request('kava.liquid.v1beta1.Query', 'DelegatedBalance', data);
        return promise.then(function (data) {
            return exports.QueryDelegatedBalanceResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    return QueryClientImpl;
}());
exports.QueryClientImpl = QueryClientImpl;
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
