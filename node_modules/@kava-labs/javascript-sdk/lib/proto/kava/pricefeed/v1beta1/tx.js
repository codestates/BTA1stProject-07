"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgClientImpl = exports.MsgPostPriceResponse = exports.MsgPostPrice = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var timestamp_1 = require("../../../google/protobuf/timestamp");
exports.protobufPackage = 'kava.pricefeed.v1beta1';
function createBaseMsgPostPrice() {
    return { from: '', marketId: '', price: '', expiry: undefined };
}
exports.MsgPostPrice = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.from !== '') {
            writer.uint32(10).string(message.from);
        }
        if (message.marketId !== '') {
            writer.uint32(18).string(message.marketId);
        }
        if (message.price !== '') {
            writer.uint32(26).string(message.price);
        }
        if (message.expiry !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.expiry), writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMsgPostPrice();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.from = reader.string();
                    break;
                case 2:
                    message.marketId = reader.string();
                    break;
                case 3:
                    message.price = reader.string();
                    break;
                case 4:
                    message.expiry = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            from: isSet(object.from) ? String(object.from) : '',
            marketId: isSet(object.marketId) ? String(object.marketId) : '',
            price: isSet(object.price) ? String(object.price) : '',
            expiry: isSet(object.expiry)
                ? fromJsonTimestamp(object.expiry)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.from !== undefined && (obj.from = message.from);
        message.marketId !== undefined && (obj.marketId = message.marketId);
        message.price !== undefined && (obj.price = message.price);
        message.expiry !== undefined && (obj.expiry = message.expiry.toISOString());
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseMsgPostPrice();
        message.from = (_a = object.from) !== null && _a !== void 0 ? _a : '';
        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : '';
        message.price = (_c = object.price) !== null && _c !== void 0 ? _c : '';
        message.expiry = (_d = object.expiry) !== null && _d !== void 0 ? _d : undefined;
        return message;
    },
};
function createBaseMsgPostPriceResponse() {
    return {};
}
exports.MsgPostPriceResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMsgPostPriceResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseMsgPostPriceResponse();
        return message;
    },
};
var MsgClientImpl = /** @class */ (function () {
    function MsgClientImpl(rpc) {
        this.rpc = rpc;
        this.PostPrice = this.PostPrice.bind(this);
    }
    MsgClientImpl.prototype.PostPrice = function (request) {
        var data = exports.MsgPostPrice.encode(request).finish();
        var promise = this.rpc.request('kava.pricefeed.v1beta1.Msg', 'PostPrice', data);
        return promise.then(function (data) {
            return exports.MsgPostPriceResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    return MsgClientImpl;
}());
exports.MsgClientImpl = MsgClientImpl;
function toTimestamp(date) {
    var seconds = numberToLong(date.getTime() / 1000);
    var nanos = (date.getTime() % 1000) * 1000000;
    return { seconds: seconds, nanos: nanos };
}
function fromTimestamp(t) {
    var millis = t.seconds.toNumber() * 1000;
    millis += t.nanos / 1000000;
    return new Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof Date) {
        return o;
    }
    else if (typeof o === 'string') {
        return new Date(o);
    }
    else {
        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));
    }
}
function numberToLong(number) {
    return long_1.default.fromNumber(number);
}
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
