"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryClientImpl = exports.MarketResponse = exports.CurrentPriceResponse = exports.PostedPriceResponse = exports.QueryMarketsResponse = exports.QueryMarketsRequest = exports.QueryOraclesResponse = exports.QueryOraclesRequest = exports.QueryRawPricesResponse = exports.QueryRawPricesRequest = exports.QueryPricesResponse = exports.QueryPricesRequest = exports.QueryPriceResponse = exports.QueryPriceRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var store_1 = require("../../../kava/pricefeed/v1beta1/store");
var timestamp_1 = require("../../../google/protobuf/timestamp");
exports.protobufPackage = 'kava.pricefeed.v1beta1';
function createBaseQueryParamsRequest() {
    return {};
}
exports.QueryParamsRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseQueryParamsRequest();
        return message;
    },
};
function createBaseQueryParamsResponse() {
    return { params: undefined };
}
exports.QueryParamsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.params !== undefined) {
            store_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = store_1.Params.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            params: isSet(object.params) ? store_1.Params.fromJSON(object.params) : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.params !== undefined &&
            (obj.params = message.params ? store_1.Params.toJSON(message.params) : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseQueryParamsResponse();
        message.params =
            object.params !== undefined && object.params !== null
                ? store_1.Params.fromPartial(object.params)
                : undefined;
        return message;
    },
};
function createBaseQueryPriceRequest() {
    return { marketId: '' };
}
exports.QueryPriceRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.marketId !== '') {
            writer.uint32(10).string(message.marketId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryPriceRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.marketId = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            marketId: isSet(object.marketId) ? String(object.marketId) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.marketId !== undefined && (obj.marketId = message.marketId);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryPriceRequest();
        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : '';
        return message;
    },
};
function createBaseQueryPriceResponse() {
    return { price: undefined };
}
exports.QueryPriceResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.price !== undefined) {
            exports.CurrentPriceResponse.encode(message.price, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryPriceResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.price = exports.CurrentPriceResponse.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            price: isSet(object.price)
                ? exports.CurrentPriceResponse.fromJSON(object.price)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.price !== undefined &&
            (obj.price = message.price
                ? exports.CurrentPriceResponse.toJSON(message.price)
                : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseQueryPriceResponse();
        message.price =
            object.price !== undefined && object.price !== null
                ? exports.CurrentPriceResponse.fromPartial(object.price)
                : undefined;
        return message;
    },
};
function createBaseQueryPricesRequest() {
    return {};
}
exports.QueryPricesRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryPricesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseQueryPricesRequest();
        return message;
    },
};
function createBaseQueryPricesResponse() {
    return { prices: [] };
}
exports.QueryPricesResponse = {
    encode: function (message, writer) {
        var e_1, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _b = __values(message.prices), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                exports.CurrentPriceResponse.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryPricesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.prices.push(exports.CurrentPriceResponse.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            prices: Array.isArray(object === null || object === void 0 ? void 0 : object.prices)
                ? object.prices.map(function (e) { return exports.CurrentPriceResponse.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.prices) {
            obj.prices = message.prices.map(function (e) {
                return e ? exports.CurrentPriceResponse.toJSON(e) : undefined;
            });
        }
        else {
            obj.prices = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryPricesResponse();
        message.prices =
            ((_a = object.prices) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.CurrentPriceResponse.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseQueryRawPricesRequest() {
    return { marketId: '' };
}
exports.QueryRawPricesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.marketId !== '') {
            writer.uint32(10).string(message.marketId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryRawPricesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.marketId = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            marketId: isSet(object.marketId) ? String(object.marketId) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.marketId !== undefined && (obj.marketId = message.marketId);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryRawPricesRequest();
        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : '';
        return message;
    },
};
function createBaseQueryRawPricesResponse() {
    return { rawPrices: [] };
}
exports.QueryRawPricesResponse = {
    encode: function (message, writer) {
        var e_2, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _b = __values(message.rawPrices), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                exports.PostedPriceResponse.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryRawPricesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.rawPrices.push(exports.PostedPriceResponse.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            rawPrices: Array.isArray(object === null || object === void 0 ? void 0 : object.rawPrices)
                ? object.rawPrices.map(function (e) { return exports.PostedPriceResponse.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.rawPrices) {
            obj.rawPrices = message.rawPrices.map(function (e) {
                return e ? exports.PostedPriceResponse.toJSON(e) : undefined;
            });
        }
        else {
            obj.rawPrices = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryRawPricesResponse();
        message.rawPrices =
            ((_a = object.rawPrices) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.PostedPriceResponse.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseQueryOraclesRequest() {
    return { marketId: '' };
}
exports.QueryOraclesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.marketId !== '') {
            writer.uint32(10).string(message.marketId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryOraclesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.marketId = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            marketId: isSet(object.marketId) ? String(object.marketId) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.marketId !== undefined && (obj.marketId = message.marketId);
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryOraclesRequest();
        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : '';
        return message;
    },
};
function createBaseQueryOraclesResponse() {
    return { oracles: [] };
}
exports.QueryOraclesResponse = {
    encode: function (message, writer) {
        var e_3, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _b = __values(message.oracles), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                writer.uint32(10).string(v);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryOraclesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.oracles.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            oracles: Array.isArray(object === null || object === void 0 ? void 0 : object.oracles)
                ? object.oracles.map(function (e) { return String(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.oracles) {
            obj.oracles = message.oracles.map(function (e) { return e; });
        }
        else {
            obj.oracles = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryOraclesResponse();
        message.oracles = ((_a = object.oracles) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        return message;
    },
};
function createBaseQueryMarketsRequest() {
    return {};
}
exports.QueryMarketsRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryMarketsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseQueryMarketsRequest();
        return message;
    },
};
function createBaseQueryMarketsResponse() {
    return { markets: [] };
}
exports.QueryMarketsResponse = {
    encode: function (message, writer) {
        var e_4, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _b = __values(message.markets), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                exports.MarketResponse.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseQueryMarketsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.markets.push(exports.MarketResponse.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            markets: Array.isArray(object === null || object === void 0 ? void 0 : object.markets)
                ? object.markets.map(function (e) { return exports.MarketResponse.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.markets) {
            obj.markets = message.markets.map(function (e) {
                return e ? exports.MarketResponse.toJSON(e) : undefined;
            });
        }
        else {
            obj.markets = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseQueryMarketsResponse();
        message.markets =
            ((_a = object.markets) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.MarketResponse.fromPartial(e); })) || [];
        return message;
    },
};
function createBasePostedPriceResponse() {
    return { marketId: '', oracleAddress: '', price: '', expiry: undefined };
}
exports.PostedPriceResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.marketId !== '') {
            writer.uint32(10).string(message.marketId);
        }
        if (message.oracleAddress !== '') {
            writer.uint32(18).string(message.oracleAddress);
        }
        if (message.price !== '') {
            writer.uint32(26).string(message.price);
        }
        if (message.expiry !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.expiry), writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBasePostedPriceResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.marketId = reader.string();
                    break;
                case 2:
                    message.oracleAddress = reader.string();
                    break;
                case 3:
                    message.price = reader.string();
                    break;
                case 4:
                    message.expiry = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            marketId: isSet(object.marketId) ? String(object.marketId) : '',
            oracleAddress: isSet(object.oracleAddress)
                ? String(object.oracleAddress)
                : '',
            price: isSet(object.price) ? String(object.price) : '',
            expiry: isSet(object.expiry)
                ? fromJsonTimestamp(object.expiry)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.marketId !== undefined && (obj.marketId = message.marketId);
        message.oracleAddress !== undefined &&
            (obj.oracleAddress = message.oracleAddress);
        message.price !== undefined && (obj.price = message.price);
        message.expiry !== undefined && (obj.expiry = message.expiry.toISOString());
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBasePostedPriceResponse();
        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : '';
        message.oracleAddress = (_b = object.oracleAddress) !== null && _b !== void 0 ? _b : '';
        message.price = (_c = object.price) !== null && _c !== void 0 ? _c : '';
        message.expiry = (_d = object.expiry) !== null && _d !== void 0 ? _d : undefined;
        return message;
    },
};
function createBaseCurrentPriceResponse() {
    return { marketId: '', price: '' };
}
exports.CurrentPriceResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.marketId !== '') {
            writer.uint32(10).string(message.marketId);
        }
        if (message.price !== '') {
            writer.uint32(18).string(message.price);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCurrentPriceResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.marketId = reader.string();
                    break;
                case 2:
                    message.price = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            marketId: isSet(object.marketId) ? String(object.marketId) : '',
            price: isSet(object.price) ? String(object.price) : '',
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.marketId !== undefined && (obj.marketId = message.marketId);
        message.price !== undefined && (obj.price = message.price);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseCurrentPriceResponse();
        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : '';
        message.price = (_b = object.price) !== null && _b !== void 0 ? _b : '';
        return message;
    },
};
function createBaseMarketResponse() {
    return {
        marketId: '',
        baseAsset: '',
        quoteAsset: '',
        oracles: [],
        active: false,
    };
}
exports.MarketResponse = {
    encode: function (message, writer) {
        var e_5, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.marketId !== '') {
            writer.uint32(10).string(message.marketId);
        }
        if (message.baseAsset !== '') {
            writer.uint32(18).string(message.baseAsset);
        }
        if (message.quoteAsset !== '') {
            writer.uint32(26).string(message.quoteAsset);
        }
        try {
            for (var _b = __values(message.oracles), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                writer.uint32(34).string(v);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
        if (message.active === true) {
            writer.uint32(40).bool(message.active);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMarketResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.marketId = reader.string();
                    break;
                case 2:
                    message.baseAsset = reader.string();
                    break;
                case 3:
                    message.quoteAsset = reader.string();
                    break;
                case 4:
                    message.oracles.push(reader.string());
                    break;
                case 5:
                    message.active = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            marketId: isSet(object.marketId) ? String(object.marketId) : '',
            baseAsset: isSet(object.baseAsset) ? String(object.baseAsset) : '',
            quoteAsset: isSet(object.quoteAsset) ? String(object.quoteAsset) : '',
            oracles: Array.isArray(object === null || object === void 0 ? void 0 : object.oracles)
                ? object.oracles.map(function (e) { return String(e); })
                : [],
            active: isSet(object.active) ? Boolean(object.active) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.marketId !== undefined && (obj.marketId = message.marketId);
        message.baseAsset !== undefined && (obj.baseAsset = message.baseAsset);
        message.quoteAsset !== undefined && (obj.quoteAsset = message.quoteAsset);
        if (message.oracles) {
            obj.oracles = message.oracles.map(function (e) { return e; });
        }
        else {
            obj.oracles = [];
        }
        message.active !== undefined && (obj.active = message.active);
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseMarketResponse();
        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : '';
        message.baseAsset = (_b = object.baseAsset) !== null && _b !== void 0 ? _b : '';
        message.quoteAsset = (_c = object.quoteAsset) !== null && _c !== void 0 ? _c : '';
        message.oracles = ((_d = object.oracles) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.active = (_e = object.active) !== null && _e !== void 0 ? _e : false;
        return message;
    },
};
var QueryClientImpl = /** @class */ (function () {
    function QueryClientImpl(rpc) {
        this.rpc = rpc;
        this.Params = this.Params.bind(this);
        this.Price = this.Price.bind(this);
        this.Prices = this.Prices.bind(this);
        this.RawPrices = this.RawPrices.bind(this);
        this.Oracles = this.Oracles.bind(this);
        this.Markets = this.Markets.bind(this);
    }
    QueryClientImpl.prototype.Params = function (request) {
        var data = exports.QueryParamsRequest.encode(request).finish();
        var promise = this.rpc.request('kava.pricefeed.v1beta1.Query', 'Params', data);
        return promise.then(function (data) {
            return exports.QueryParamsResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    QueryClientImpl.prototype.Price = function (request) {
        var data = exports.QueryPriceRequest.encode(request).finish();
        var promise = this.rpc.request('kava.pricefeed.v1beta1.Query', 'Price', data);
        return promise.then(function (data) {
            return exports.QueryPriceResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    QueryClientImpl.prototype.Prices = function (request) {
        var data = exports.QueryPricesRequest.encode(request).finish();
        var promise = this.rpc.request('kava.pricefeed.v1beta1.Query', 'Prices', data);
        return promise.then(function (data) {
            return exports.QueryPricesResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    QueryClientImpl.prototype.RawPrices = function (request) {
        var data = exports.QueryRawPricesRequest.encode(request).finish();
        var promise = this.rpc.request('kava.pricefeed.v1beta1.Query', 'RawPrices', data);
        return promise.then(function (data) {
            return exports.QueryRawPricesResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    QueryClientImpl.prototype.Oracles = function (request) {
        var data = exports.QueryOraclesRequest.encode(request).finish();
        var promise = this.rpc.request('kava.pricefeed.v1beta1.Query', 'Oracles', data);
        return promise.then(function (data) {
            return exports.QueryOraclesResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    QueryClientImpl.prototype.Markets = function (request) {
        var data = exports.QueryMarketsRequest.encode(request).finish();
        var promise = this.rpc.request('kava.pricefeed.v1beta1.Query', 'Markets', data);
        return promise.then(function (data) {
            return exports.QueryMarketsResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    return QueryClientImpl;
}());
exports.QueryClientImpl = QueryClientImpl;
function toTimestamp(date) {
    var seconds = numberToLong(date.getTime() / 1000);
    var nanos = (date.getTime() % 1000) * 1000000;
    return { seconds: seconds, nanos: nanos };
}
function fromTimestamp(t) {
    var millis = t.seconds.toNumber() * 1000;
    millis += t.nanos / 1000000;
    return new Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof Date) {
        return o;
    }
    else if (typeof o === 'string') {
        return new Date(o);
    }
    else {
        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));
    }
}
function numberToLong(number) {
    return long_1.default.fromNumber(number);
}
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
