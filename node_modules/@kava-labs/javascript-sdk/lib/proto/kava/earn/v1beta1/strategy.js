"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.strategyTypeToJSON = exports.strategyTypeFromJSON = exports.StrategyType = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = 'kava.earn.v1beta1';
/** StrategyType is the type of strategy that a vault uses to optimize yields. */
var StrategyType;
(function (StrategyType) {
    /** STRATEGY_TYPE_UNSPECIFIED - STRATEGY_TYPE_UNSPECIFIED represents an unspecified or invalid strategy type. */
    StrategyType[StrategyType["STRATEGY_TYPE_UNSPECIFIED"] = 0] = "STRATEGY_TYPE_UNSPECIFIED";
    /**
     * STRATEGY_TYPE_HARD - STRATEGY_TYPE_HARD represents the strategy that deposits assets in the Hard
     * module.
     */
    StrategyType[StrategyType["STRATEGY_TYPE_HARD"] = 1] = "STRATEGY_TYPE_HARD";
    /**
     * STRATEGY_TYPE_SAVINGS - STRATEGY_TYPE_SAVINGS represents the strategy that deposits assets in the
     * Savings module.
     */
    StrategyType[StrategyType["STRATEGY_TYPE_SAVINGS"] = 2] = "STRATEGY_TYPE_SAVINGS";
    StrategyType[StrategyType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(StrategyType = exports.StrategyType || (exports.StrategyType = {}));
function strategyTypeFromJSON(object) {
    switch (object) {
        case 0:
        case 'STRATEGY_TYPE_UNSPECIFIED':
            return StrategyType.STRATEGY_TYPE_UNSPECIFIED;
        case 1:
        case 'STRATEGY_TYPE_HARD':
            return StrategyType.STRATEGY_TYPE_HARD;
        case 2:
        case 'STRATEGY_TYPE_SAVINGS':
            return StrategyType.STRATEGY_TYPE_SAVINGS;
        case -1:
        case 'UNRECOGNIZED':
        default:
            return StrategyType.UNRECOGNIZED;
    }
}
exports.strategyTypeFromJSON = strategyTypeFromJSON;
function strategyTypeToJSON(object) {
    switch (object) {
        case StrategyType.STRATEGY_TYPE_UNSPECIFIED:
            return 'STRATEGY_TYPE_UNSPECIFIED';
        case StrategyType.STRATEGY_TYPE_HARD:
            return 'STRATEGY_TYPE_HARD';
        case StrategyType.STRATEGY_TYPE_SAVINGS:
            return 'STRATEGY_TYPE_SAVINGS';
        default:
            return 'UNKNOWN';
    }
}
exports.strategyTypeToJSON = strategyTypeToJSON;
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
