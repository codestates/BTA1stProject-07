"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Vote = exports.Proposal = exports.GenesisState = exports.voteTypeToJSON = exports.voteTypeFromJSON = exports.VoteType = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var any_1 = require("../../../google/protobuf/any");
var timestamp_1 = require("../../../google/protobuf/timestamp");
exports.protobufPackage = 'kava.committee.v1beta1';
/** VoteType enumerates the valid types of a vote. */
var VoteType;
(function (VoteType) {
    /** VOTE_TYPE_UNSPECIFIED - VOTE_TYPE_UNSPECIFIED defines a no-op vote option. */
    VoteType[VoteType["VOTE_TYPE_UNSPECIFIED"] = 0] = "VOTE_TYPE_UNSPECIFIED";
    /** VOTE_TYPE_YES - VOTE_TYPE_YES defines a yes vote option. */
    VoteType[VoteType["VOTE_TYPE_YES"] = 1] = "VOTE_TYPE_YES";
    /** VOTE_TYPE_NO - VOTE_TYPE_NO defines a no vote option. */
    VoteType[VoteType["VOTE_TYPE_NO"] = 2] = "VOTE_TYPE_NO";
    /** VOTE_TYPE_ABSTAIN - VOTE_TYPE_ABSTAIN defines an abstain vote option. */
    VoteType[VoteType["VOTE_TYPE_ABSTAIN"] = 3] = "VOTE_TYPE_ABSTAIN";
    VoteType[VoteType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(VoteType = exports.VoteType || (exports.VoteType = {}));
function voteTypeFromJSON(object) {
    switch (object) {
        case 0:
        case 'VOTE_TYPE_UNSPECIFIED':
            return VoteType.VOTE_TYPE_UNSPECIFIED;
        case 1:
        case 'VOTE_TYPE_YES':
            return VoteType.VOTE_TYPE_YES;
        case 2:
        case 'VOTE_TYPE_NO':
            return VoteType.VOTE_TYPE_NO;
        case 3:
        case 'VOTE_TYPE_ABSTAIN':
            return VoteType.VOTE_TYPE_ABSTAIN;
        case -1:
        case 'UNRECOGNIZED':
        default:
            return VoteType.UNRECOGNIZED;
    }
}
exports.voteTypeFromJSON = voteTypeFromJSON;
function voteTypeToJSON(object) {
    switch (object) {
        case VoteType.VOTE_TYPE_UNSPECIFIED:
            return 'VOTE_TYPE_UNSPECIFIED';
        case VoteType.VOTE_TYPE_YES:
            return 'VOTE_TYPE_YES';
        case VoteType.VOTE_TYPE_NO:
            return 'VOTE_TYPE_NO';
        case VoteType.VOTE_TYPE_ABSTAIN:
            return 'VOTE_TYPE_ABSTAIN';
        default:
            return 'UNKNOWN';
    }
}
exports.voteTypeToJSON = voteTypeToJSON;
function createBaseGenesisState() {
    return {
        nextProposalId: long_1.default.UZERO,
        committees: [],
        proposals: [],
        votes: [],
    };
}
exports.GenesisState = {
    encode: function (message, writer) {
        var e_1, _a, e_2, _b, e_3, _c;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (!message.nextProposalId.isZero()) {
            writer.uint32(8).uint64(message.nextProposalId);
        }
        try {
            for (var _d = __values(message.committees), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                any_1.Any.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var _f = __values(message.proposals), _g = _f.next(); !_g.done; _g = _f.next()) {
                var v = _g.value;
                exports.Proposal.encode(v, writer.uint32(26).fork()).ldelim();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _h = __values(message.votes), _j = _h.next(); !_j.done; _j = _h.next()) {
                var v = _j.value;
                exports.Vote.encode(v, writer.uint32(34).fork()).ldelim();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGenesisState();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.nextProposalId = reader.uint64();
                    break;
                case 2:
                    message.committees.push(any_1.Any.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.proposals.push(exports.Proposal.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.votes.push(exports.Vote.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            nextProposalId: isSet(object.nextProposalId)
                ? long_1.default.fromString(object.nextProposalId)
                : long_1.default.UZERO,
            committees: Array.isArray(object === null || object === void 0 ? void 0 : object.committees)
                ? object.committees.map(function (e) { return any_1.Any.fromJSON(e); })
                : [],
            proposals: Array.isArray(object === null || object === void 0 ? void 0 : object.proposals)
                ? object.proposals.map(function (e) { return exports.Proposal.fromJSON(e); })
                : [],
            votes: Array.isArray(object === null || object === void 0 ? void 0 : object.votes)
                ? object.votes.map(function (e) { return exports.Vote.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.nextProposalId !== undefined &&
            (obj.nextProposalId = (message.nextProposalId || long_1.default.UZERO).toString());
        if (message.committees) {
            obj.committees = message.committees.map(function (e) {
                return e ? any_1.Any.toJSON(e) : undefined;
            });
        }
        else {
            obj.committees = [];
        }
        if (message.proposals) {
            obj.proposals = message.proposals.map(function (e) {
                return e ? exports.Proposal.toJSON(e) : undefined;
            });
        }
        else {
            obj.proposals = [];
        }
        if (message.votes) {
            obj.votes = message.votes.map(function (e) { return (e ? exports.Vote.toJSON(e) : undefined); });
        }
        else {
            obj.votes = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGenesisState();
        message.nextProposalId =
            object.nextProposalId !== undefined && object.nextProposalId !== null
                ? long_1.default.fromValue(object.nextProposalId)
                : long_1.default.UZERO;
        message.committees =
            ((_a = object.committees) === null || _a === void 0 ? void 0 : _a.map(function (e) { return any_1.Any.fromPartial(e); })) || [];
        message.proposals =
            ((_b = object.proposals) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.Proposal.fromPartial(e); })) || [];
        message.votes = ((_c = object.votes) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.Vote.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseProposal() {
    return {
        content: undefined,
        id: long_1.default.UZERO,
        committeeId: long_1.default.UZERO,
        deadline: undefined,
    };
}
exports.Proposal = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.content !== undefined) {
            any_1.Any.encode(message.content, writer.uint32(10).fork()).ldelim();
        }
        if (!message.id.isZero()) {
            writer.uint32(16).uint64(message.id);
        }
        if (!message.committeeId.isZero()) {
            writer.uint32(24).uint64(message.committeeId);
        }
        if (message.deadline !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.deadline), writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseProposal();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.content = any_1.Any.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.id = reader.uint64();
                    break;
                case 3:
                    message.committeeId = reader.uint64();
                    break;
                case 4:
                    message.deadline = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            content: isSet(object.content) ? any_1.Any.fromJSON(object.content) : undefined,
            id: isSet(object.id) ? long_1.default.fromString(object.id) : long_1.default.UZERO,
            committeeId: isSet(object.committeeId)
                ? long_1.default.fromString(object.committeeId)
                : long_1.default.UZERO,
            deadline: isSet(object.deadline)
                ? fromJsonTimestamp(object.deadline)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.content !== undefined &&
            (obj.content = message.content ? any_1.Any.toJSON(message.content) : undefined);
        message.id !== undefined &&
            (obj.id = (message.id || long_1.default.UZERO).toString());
        message.committeeId !== undefined &&
            (obj.committeeId = (message.committeeId || long_1.default.UZERO).toString());
        message.deadline !== undefined &&
            (obj.deadline = message.deadline.toISOString());
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseProposal();
        message.content =
            object.content !== undefined && object.content !== null
                ? any_1.Any.fromPartial(object.content)
                : undefined;
        message.id =
            object.id !== undefined && object.id !== null
                ? long_1.default.fromValue(object.id)
                : long_1.default.UZERO;
        message.committeeId =
            object.committeeId !== undefined && object.committeeId !== null
                ? long_1.default.fromValue(object.committeeId)
                : long_1.default.UZERO;
        message.deadline = (_a = object.deadline) !== null && _a !== void 0 ? _a : undefined;
        return message;
    },
};
function createBaseVote() {
    return { proposalId: long_1.default.UZERO, voter: new Uint8Array(), voteType: 0 };
}
exports.Vote = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (!message.proposalId.isZero()) {
            writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter.length !== 0) {
            writer.uint32(18).bytes(message.voter);
        }
        if (message.voteType !== 0) {
            writer.uint32(24).int32(message.voteType);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseVote();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.proposalId = reader.uint64();
                    break;
                case 2:
                    message.voter = reader.bytes();
                    break;
                case 3:
                    message.voteType = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            proposalId: isSet(object.proposalId)
                ? long_1.default.fromString(object.proposalId)
                : long_1.default.UZERO,
            voter: isSet(object.voter)
                ? bytesFromBase64(object.voter)
                : new Uint8Array(),
            voteType: isSet(object.voteType) ? voteTypeFromJSON(object.voteType) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.proposalId !== undefined &&
            (obj.proposalId = (message.proposalId || long_1.default.UZERO).toString());
        message.voter !== undefined &&
            (obj.voter = base64FromBytes(message.voter !== undefined ? message.voter : new Uint8Array()));
        message.voteType !== undefined &&
            (obj.voteType = voteTypeToJSON(message.voteType));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseVote();
        message.proposalId =
            object.proposalId !== undefined && object.proposalId !== null
                ? long_1.default.fromValue(object.proposalId)
                : long_1.default.UZERO;
        message.voter = (_a = object.voter) !== null && _a !== void 0 ? _a : new Uint8Array();
        message.voteType = (_b = object.voteType) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
var globalThis = (function () {
    if (typeof globalThis !== 'undefined')
        return globalThis;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
var atob = globalThis.atob ||
    (function (b64) { return globalThis.Buffer.from(b64, 'base64').toString('binary'); });
function bytesFromBase64(b64) {
    var bin = atob(b64);
    var arr = new Uint8Array(bin.length);
    for (var i = 0; i < bin.length; ++i) {
        arr[i] = bin.charCodeAt(i);
    }
    return arr;
}
var btoa = globalThis.btoa ||
    (function (bin) { return globalThis.Buffer.from(bin, 'binary').toString('base64'); });
function base64FromBytes(arr) {
    var e_4, _a;
    var bin = [];
    try {
        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {
            var byte = arr_1_1.value;
            bin.push(String.fromCharCode(byte));
        }
    }
    catch (e_4_1) { e_4 = { error: e_4_1 }; }
    finally {
        try {
            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);
        }
        finally { if (e_4) throw e_4.error; }
    }
    return btoa(bin.join(''));
}
function toTimestamp(date) {
    var seconds = numberToLong(date.getTime() / 1000);
    var nanos = (date.getTime() % 1000) * 1000000;
    return { seconds: seconds, nanos: nanos };
}
function fromTimestamp(t) {
    var millis = t.seconds.toNumber() * 1000;
    millis += t.nanos / 1000000;
    return new Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof Date) {
        return o;
    }
    else if (typeof o === 'string') {
        return new Date(o);
    }
    else {
        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));
    }
}
function numberToLong(number) {
    return long_1.default.fromNumber(number);
}
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
