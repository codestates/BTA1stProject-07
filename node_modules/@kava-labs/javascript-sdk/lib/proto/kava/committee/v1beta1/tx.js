"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgClientImpl = exports.MsgVoteResponse = exports.MsgVote = exports.MsgSubmitProposalResponse = exports.MsgSubmitProposal = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var any_1 = require("../../../google/protobuf/any");
var genesis_1 = require("../../../kava/committee/v1beta1/genesis");
exports.protobufPackage = 'kava.committee.v1beta1';
function createBaseMsgSubmitProposal() {
    return { pubProposal: undefined, proposer: '', committeeId: long_1.default.UZERO };
}
exports.MsgSubmitProposal = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.pubProposal !== undefined) {
            any_1.Any.encode(message.pubProposal, writer.uint32(10).fork()).ldelim();
        }
        if (message.proposer !== '') {
            writer.uint32(18).string(message.proposer);
        }
        if (!message.committeeId.isZero()) {
            writer.uint32(24).uint64(message.committeeId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMsgSubmitProposal();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.pubProposal = any_1.Any.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.proposer = reader.string();
                    break;
                case 3:
                    message.committeeId = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            pubProposal: isSet(object.pubProposal)
                ? any_1.Any.fromJSON(object.pubProposal)
                : undefined,
            proposer: isSet(object.proposer) ? String(object.proposer) : '',
            committeeId: isSet(object.committeeId)
                ? long_1.default.fromString(object.committeeId)
                : long_1.default.UZERO,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.pubProposal !== undefined &&
            (obj.pubProposal = message.pubProposal
                ? any_1.Any.toJSON(message.pubProposal)
                : undefined);
        message.proposer !== undefined && (obj.proposer = message.proposer);
        message.committeeId !== undefined &&
            (obj.committeeId = (message.committeeId || long_1.default.UZERO).toString());
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseMsgSubmitProposal();
        message.pubProposal =
            object.pubProposal !== undefined && object.pubProposal !== null
                ? any_1.Any.fromPartial(object.pubProposal)
                : undefined;
        message.proposer = (_a = object.proposer) !== null && _a !== void 0 ? _a : '';
        message.committeeId =
            object.committeeId !== undefined && object.committeeId !== null
                ? long_1.default.fromValue(object.committeeId)
                : long_1.default.UZERO;
        return message;
    },
};
function createBaseMsgSubmitProposalResponse() {
    return { proposalId: long_1.default.UZERO };
}
exports.MsgSubmitProposalResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (!message.proposalId.isZero()) {
            writer.uint32(8).uint64(message.proposalId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMsgSubmitProposalResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.proposalId = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            proposalId: isSet(object.proposalId)
                ? long_1.default.fromString(object.proposalId)
                : long_1.default.UZERO,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.proposalId !== undefined &&
            (obj.proposalId = (message.proposalId || long_1.default.UZERO).toString());
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseMsgSubmitProposalResponse();
        message.proposalId =
            object.proposalId !== undefined && object.proposalId !== null
                ? long_1.default.fromValue(object.proposalId)
                : long_1.default.UZERO;
        return message;
    },
};
function createBaseMsgVote() {
    return { proposalId: long_1.default.UZERO, voter: '', voteType: 0 };
}
exports.MsgVote = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (!message.proposalId.isZero()) {
            writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== '') {
            writer.uint32(18).string(message.voter);
        }
        if (message.voteType !== 0) {
            writer.uint32(24).int32(message.voteType);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMsgVote();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.proposalId = reader.uint64();
                    break;
                case 2:
                    message.voter = reader.string();
                    break;
                case 3:
                    message.voteType = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            proposalId: isSet(object.proposalId)
                ? long_1.default.fromString(object.proposalId)
                : long_1.default.UZERO,
            voter: isSet(object.voter) ? String(object.voter) : '',
            voteType: isSet(object.voteType) ? (0, genesis_1.voteTypeFromJSON)(object.voteType) : 0,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.proposalId !== undefined &&
            (obj.proposalId = (message.proposalId || long_1.default.UZERO).toString());
        message.voter !== undefined && (obj.voter = message.voter);
        message.voteType !== undefined &&
            (obj.voteType = (0, genesis_1.voteTypeToJSON)(message.voteType));
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseMsgVote();
        message.proposalId =
            object.proposalId !== undefined && object.proposalId !== null
                ? long_1.default.fromValue(object.proposalId)
                : long_1.default.UZERO;
        message.voter = (_a = object.voter) !== null && _a !== void 0 ? _a : '';
        message.voteType = (_b = object.voteType) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseMsgVoteResponse() {
    return {};
}
exports.MsgVoteResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMsgVoteResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseMsgVoteResponse();
        return message;
    },
};
var MsgClientImpl = /** @class */ (function () {
    function MsgClientImpl(rpc) {
        this.rpc = rpc;
        this.SubmitProposal = this.SubmitProposal.bind(this);
        this.Vote = this.Vote.bind(this);
    }
    MsgClientImpl.prototype.SubmitProposal = function (request) {
        var data = exports.MsgSubmitProposal.encode(request).finish();
        var promise = this.rpc.request('kava.committee.v1beta1.Msg', 'SubmitProposal', data);
        return promise.then(function (data) {
            return exports.MsgSubmitProposalResponse.decode(new minimal_1.default.Reader(data));
        });
    };
    MsgClientImpl.prototype.Vote = function (request) {
        var data = exports.MsgVote.encode(request).finish();
        var promise = this.rpc.request('kava.committee.v1beta1.Msg', 'Vote', data);
        return promise.then(function (data) { return exports.MsgVoteResponse.decode(new minimal_1.default.Reader(data)); });
    };
    return MsgClientImpl;
}());
exports.MsgClientImpl = MsgClientImpl;
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
