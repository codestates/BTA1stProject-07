"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubparamRequirement = exports.AllowedParamsChange = exports.ParamsChangePermission = exports.TextPermission = exports.SoftwareUpgradePermission = exports.GodPermission = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = 'kava.committee.v1beta1';
function createBaseGodPermission() {
    return {};
}
exports.GodPermission = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGodPermission();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseGodPermission();
        return message;
    },
};
function createBaseSoftwareUpgradePermission() {
    return {};
}
exports.SoftwareUpgradePermission = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSoftwareUpgradePermission();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseSoftwareUpgradePermission();
        return message;
    },
};
function createBaseTextPermission() {
    return {};
}
exports.TextPermission = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseTextPermission();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    fromPartial: function (_) {
        var message = createBaseTextPermission();
        return message;
    },
};
function createBaseParamsChangePermission() {
    return { allowedParamsChanges: [] };
}
exports.ParamsChangePermission = {
    encode: function (message, writer) {
        var e_1, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        try {
            for (var _b = __values(message.allowedParamsChanges), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                exports.AllowedParamsChange.encode(v, writer.uint32(10).fork()).ldelim();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseParamsChangePermission();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.allowedParamsChanges.push(exports.AllowedParamsChange.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            allowedParamsChanges: Array.isArray(object === null || object === void 0 ? void 0 : object.allowedParamsChanges)
                ? object.allowedParamsChanges.map(function (e) {
                    return exports.AllowedParamsChange.fromJSON(e);
                })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.allowedParamsChanges) {
            obj.allowedParamsChanges = message.allowedParamsChanges.map(function (e) {
                return e ? exports.AllowedParamsChange.toJSON(e) : undefined;
            });
        }
        else {
            obj.allowedParamsChanges = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseParamsChangePermission();
        message.allowedParamsChanges =
            ((_a = object.allowedParamsChanges) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.AllowedParamsChange.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseAllowedParamsChange() {
    return {
        subspace: '',
        key: '',
        singleSubparamAllowedAttrs: [],
        multiSubparamsRequirements: [],
    };
}
exports.AllowedParamsChange = {
    encode: function (message, writer) {
        var e_2, _a, e_3, _b;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.subspace !== '') {
            writer.uint32(10).string(message.subspace);
        }
        if (message.key !== '') {
            writer.uint32(18).string(message.key);
        }
        try {
            for (var _c = __values(message.singleSubparamAllowedAttrs), _d = _c.next(); !_d.done; _d = _c.next()) {
                var v = _d.value;
                writer.uint32(26).string(v);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _e = __values(message.multiSubparamsRequirements), _f = _e.next(); !_f.done; _f = _e.next()) {
                var v = _f.value;
                exports.SubparamRequirement.encode(v, writer.uint32(34).fork()).ldelim();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAllowedParamsChange();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.subspace = reader.string();
                    break;
                case 2:
                    message.key = reader.string();
                    break;
                case 3:
                    message.singleSubparamAllowedAttrs.push(reader.string());
                    break;
                case 4:
                    message.multiSubparamsRequirements.push(exports.SubparamRequirement.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            subspace: isSet(object.subspace) ? String(object.subspace) : '',
            key: isSet(object.key) ? String(object.key) : '',
            singleSubparamAllowedAttrs: Array.isArray(object === null || object === void 0 ? void 0 : object.singleSubparamAllowedAttrs)
                ? object.singleSubparamAllowedAttrs.map(function (e) { return String(e); })
                : [],
            multiSubparamsRequirements: Array.isArray(object === null || object === void 0 ? void 0 : object.multiSubparamsRequirements)
                ? object.multiSubparamsRequirements.map(function (e) {
                    return exports.SubparamRequirement.fromJSON(e);
                })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.subspace !== undefined && (obj.subspace = message.subspace);
        message.key !== undefined && (obj.key = message.key);
        if (message.singleSubparamAllowedAttrs) {
            obj.singleSubparamAllowedAttrs = message.singleSubparamAllowedAttrs.map(function (e) { return e; });
        }
        else {
            obj.singleSubparamAllowedAttrs = [];
        }
        if (message.multiSubparamsRequirements) {
            obj.multiSubparamsRequirements = message.multiSubparamsRequirements.map(function (e) { return (e ? exports.SubparamRequirement.toJSON(e) : undefined); });
        }
        else {
            obj.multiSubparamsRequirements = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseAllowedParamsChange();
        message.subspace = (_a = object.subspace) !== null && _a !== void 0 ? _a : '';
        message.key = (_b = object.key) !== null && _b !== void 0 ? _b : '';
        message.singleSubparamAllowedAttrs =
            ((_c = object.singleSubparamAllowedAttrs) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        message.multiSubparamsRequirements =
            ((_d = object.multiSubparamsRequirements) === null || _d === void 0 ? void 0 : _d.map(function (e) {
                return exports.SubparamRequirement.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseSubparamRequirement() {
    return { key: '', val: '', allowedSubparamAttrChanges: [] };
}
exports.SubparamRequirement = {
    encode: function (message, writer) {
        var e_4, _a;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.key !== '') {
            writer.uint32(10).string(message.key);
        }
        if (message.val !== '') {
            writer.uint32(18).string(message.val);
        }
        try {
            for (var _b = __values(message.allowedSubparamAttrChanges), _c = _b.next(); !_c.done; _c = _b.next()) {
                var v = _c.value;
                writer.uint32(26).string(v);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSubparamRequirement();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.val = reader.string();
                    break;
                case 3:
                    message.allowedSubparamAttrChanges.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : '',
            val: isSet(object.val) ? String(object.val) : '',
            allowedSubparamAttrChanges: Array.isArray(object === null || object === void 0 ? void 0 : object.allowedSubparamAttrChanges)
                ? object.allowedSubparamAttrChanges.map(function (e) { return String(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.val !== undefined && (obj.val = message.val);
        if (message.allowedSubparamAttrChanges) {
            obj.allowedSubparamAttrChanges = message.allowedSubparamAttrChanges.map(function (e) { return e; });
        }
        else {
            obj.allowedSubparamAttrChanges = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseSubparamRequirement();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : '';
        message.val = (_b = object.val) !== null && _b !== void 0 ? _b : '';
        message.allowedSubparamAttrChanges =
            ((_c = object.allowedSubparamAttrChanges) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
