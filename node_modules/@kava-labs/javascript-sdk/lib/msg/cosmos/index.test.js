"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require(".");
describe('Cosmos messages', function () {
    describe('newMsgSend', function () {
        it('should sort the coins passed in by denom', function () {
            var coins = [
                {
                    denom: 'ukava',
                    amount: '30000000',
                },
                {
                    denom: 'btcb',
                    amount: '10000000',
                },
                {
                    denom: 'xrpb',
                    amount: '40000000',
                },
                {
                    denom: 'swp',
                    amount: '20000000',
                },
            ];
            var message = _1.cosmos.newMsgSend('kavafrom', 'kavato', coins);
            expect(message).toStrictEqual({
                type: 'cosmos-sdk/MsgSend',
                value: {
                    from_address: 'kavafrom',
                    to_address: 'kavato',
                    amount: [
                        {
                            denom: 'btcb',
                            amount: '10000000',
                        },
                        {
                            denom: 'swp',
                            amount: '20000000',
                        },
                        {
                            denom: 'ukava',
                            amount: '30000000',
                        },
                        {
                            denom: 'xrpb',
                            amount: '40000000',
                        },
                    ],
                },
            });
        });
    });
    describe('newMsgTransfer', function () {
        it('should generate a well-formed transfer', function () {
            var coin = {
                denom: 'ukava',
                amount: '10000000',
            };
            var message = _1.cosmos.newMsgTransfer('transfer', 'channel-0', coin, 'kava1w66puffhccjck70hw75wu3v92tshw5rmdxp8hb', 'kava1a22puffhccjck70hw75wu3v92tshw5rmdxp6xz', 1638988347480000);
            var expected = {
                type: 'cosmos-sdk/MsgTransfer',
                value: {
                    source_port: 'transfer',
                    source_channel: 'channel-0',
                    token: {
                        denom: 'ukava',
                        amount: '10000000',
                    },
                    sender: 'kava1w66puffhccjck70hw75wu3v92tshw5rmdxp8hb',
                    receiver: 'kava1a22puffhccjck70hw75wu3v92tshw5rmdxp6xz',
                    timeoutHeight: 0,
                    timeoutTimestamp: 1638988347480000,
                },
            };
            expect(message).toEqual(expected);
        });
    });
});
describe('staking delegations messages', function () {
    test('newMsgDelegate', function () {
        var message = _1.cosmos.newMsgDelegate('kava1w66puffhccjck70hw75wu3v92tshw5rmdxp8hb', 'kava1a22puffhccjck70hw75wu3v92tshw5rmdxp6xz', {
            denom: 'ukava',
            amount: '10000000',
        });
        var expected = {
            type: 'cosmos-sdk/MsgDelegate',
            value: {
                delegator_address: 'kava1w66puffhccjck70hw75wu3v92tshw5rmdxp8hb',
                validator_address: 'kava1a22puffhccjck70hw75wu3v92tshw5rmdxp6xz',
                amount: {
                    denom: 'ukava',
                    amount: '10000000',
                },
            },
        };
        expect(message).toEqual(expected);
    });
    test('newMsgUnDelegate', function () {
        var message = _1.cosmos.newMsgUnDelegate('kava1w66puffhccjck70hw75wu3v92tshw5rmdxp8hb', 'kava1a22puffhccjck70hw75wu3v92tshw5rmdxp6xz', {
            denom: 'ukava',
            amount: '10000000',
        });
        var expected = {
            type: 'cosmos-sdk/MsgUndelegate',
            value: {
                delegator_address: 'kava1w66puffhccjck70hw75wu3v92tshw5rmdxp8hb',
                validator_address: 'kava1a22puffhccjck70hw75wu3v92tshw5rmdxp6xz',
                amount: {
                    denom: 'ukava',
                    amount: '10000000',
                },
            },
        };
        expect(message).toEqual(expected);
    });
});
